{"version":3,"sources":["actions/studentsActions.js","actions/departmentActions.js","actions/coursesActions.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/courses/EditCourse.js","views/courses/AllCourses.js"],"names":["fetchStudents","dispatch","axios","get","then","api","type","GET_STUDENTS","payload","data","catch","error","returnErrors","response","message","status","getChairmanStat","id","GET_CHAIRMAN_STATS","getStudent","branch","GET_STUDENT","getTimeTable","GET_TIMETABLE","getStudentStats","departmentId","GET_STUDENT_STATS","getStudentByAdvisor","GET__ADVISOR_STUDENTS","getTranscript","GET_TRANSCRIPT","AddStudents","post","ADD_STUDENT","updateStudent","put","updateGrade","studentId","courseID","AddRemoveCourses","predictedCgpa","cgpas","GET_PREDICTED_CGPA","automate","year","GET_AUTO_COURSE","CoursesApproval","COURSES_TO_APPROVE","Approval","courseId","COURSE_APPROVED","deleteStudent","delete","groups","fetchDepartment","GET_DEPARMENTS","getDepartment","ADD_DEPARTMENT","AddDepartment","updateDepartment","deleteDepartment","fetchCourses","GET_COURSES","getCourse","course","ADD_COURSE","AddCourse","updateCourse","deleteCourse","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Modals","props","useState","setData","department","setDepartment","useDispatch","departments","useSelector","state","courses","handleChange","e","target","value","name","pre","filter","useEffect","show","modal","onClose","setModal","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","defaultValue","code","semester","custom","map","dep","credit","ECT5","onClick","preventDefault","document","getElementById","reset","handleSubmit","AllCourses","coursesShown","user","auth","studentCourses","student","studentCourse","facultyId","faculty","swa","coursew","push","console","log","userId","columns","selector","sortable","cell","Course","length","style","margin","cursor","ignoreRowClick","allowOverflow","studentCol","col","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/12.4358f5d5.chunk.js","sourcesContent":["import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_STUDENTS,\r\n    GET__ADVISOR_STUDENTS,\r\n    ADD_STUDENT,\r\n    GET_AUTO_COURSE,\r\n    GET_TRANSCRIPT,\r\n    GET_STUDENT,\r\n    COURSES_TO_APPROVE,\r\n    COURSE_APPROVED,\r\n    GET_STUDENT_STATS,\r\n    GET_TIMETABLE,\r\n    GET_CHAIRMAN_STATS,\r\n    GET_PREDICTED_CGPA\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchStudents = () => dispatch => {\r\n    axios.get(`/api/student`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_STUDENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getChairmanStat = (id) => dispatch => {\r\n    axios.get(`/api/chairman/statistics/${id}`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_CHAIRMAN_STATS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudent = (id) => dispatch => {\r\n    axios.get(`/api/student/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTimeTable = (id) => dispatch => {\r\n    axios.get(`/api/student/time-table/${id}?year=2021-2022 - Fall`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TIMETABLE,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentStats = (id,departmentId) => dispatch => {\r\n    axios.get(`/api/student/stats/${id}/${departmentId}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT_STATS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentByAdvisor = (id) => dispatch => {\r\n    axios.get(`/api/student/advisor/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET__ADVISOR_STUDENTS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTranscript = (id) => dispatch => {\r\n    axios.get(`/api/student/transcript/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TRANSCRIPT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddStudents = (data) => (dispatch) => {\r\n    axios.post(\"/api/student/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateStudent = (data, id) => (dispatch) => {\r\n    axios.put(`/api/student/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const updateGrade = (data, studentId,courseID) => (dispatch) => {\r\n    axios.put(`/api/student/${studentId}/${courseID}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const AddRemoveCourses = (id, data) => (dispatch) => {\r\n    axios.put(`/api/student/add/remove/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const predictedCgpa = (cgpas) => (dispatch) => {\r\n    axios.get(`http://app.neu.edu.tr:7003/predict/%7Bvalue%7D?name=[${cgpas}]`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_PREDICTED_CGPA,\r\n                payload: branch.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n}\r\nexport const automate = (id, year) => (dispatch) => {\r\n    axios.get(`/api/student/automate/${id}?year=${year}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_AUTO_COURSE,\r\n                payload: branch.data.data\r\n            });\r\n          // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const CoursesApproval = (id) => (dispatch) => {\r\n    axios.get(`/api/student/get-approve/${id}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSES_TO_APPROVE,\r\n                payload: branch.data.data\r\n            });\r\n         //  dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const Approval = (studentId,courseId) => (dispatch) => {\r\n    axios.put(`/api/student//approve/${studentId}/${courseId}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSE_APPROVED,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteStudent = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/student/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import {\r\n    GET_DEPARMENTS,\r\n    ADD_DEPARTMENT\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchDepartment = () => dispatch => {\r\n    axios.get(`/api/department`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_DEPARMENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const getDepartment = (id) => dispatch => {\r\n    axios.get(`/api/department/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const AddDepartment = (data) => (dispatch) => {\r\n    axios.post(\"/api/department/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n }\r\nexport const updateDepartment = (data, id) => (dispatch) => {\r\n    axios.put(`/api/department/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n}\r\nexport const deleteDepartment = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/department/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\n","import {\r\n    GET_COURSES,\r\n    ADD_COURSE\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { returnErrors } from \"./errorActions\";\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchCourses = () => dispatch => {\r\n    axios.get(`/api/course`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_COURSES,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getCourse = (id) => dispatch => {\r\n    axios.get(`/api/course/${id}`,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddCourse = (data) => (dispatch) => {\r\n    axios.post(\"/api/course/create\", data,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n           dispatch(returnErrors(course.data.message, course.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateCourse = (data, id) => (dispatch) => {\r\n    axios.put(`/api/course/${id}`, data,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n            dispatch(returnErrors(course.data.message, course.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteCourse = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/course/${id}`,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState,useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n} from '@coreui/react'\r\nimport {\r\n  fetchDepartment\r\n} from \"../../actions/departmentActions\";\r\nimport {\r\n    updateCourse,\r\n    fetchCourses\r\n} from \"../../actions/coursesActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const [department, setDepartment] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const departments = useSelector((state) => state.department.departments);\r\n    const courses = useSelector((state) => state.courses.courses);\r\n    const course = useSelector((state) => state.courses.course);\r\n   \r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if(name==='departmentId'){\r\n            setDepartment(value)\r\n        }\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const pre= courses.filter(course=> course.departmentId==department )\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateCourse({ ...data },course.id));\r\n        document.getElementById(\"resetCourse\").reset()\r\n    }\r\n    useEffect(() => {\r\n        dispatch(fetchDepartment());\r\n        dispatch(fetchCourses());\r\n    }, [dispatch]);\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Edit Course</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetCourse\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} defaultValue={course?.name} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Code</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"code\" onChange={handleChange} defaultValue={course?.code }/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Semester</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"number\" name=\"semester\" onChange={handleChange} defaultValue={course?.semester}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">Department\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CSelect custom name=\"departmentId\" id=\"select\" onChange={handleChange} >\r\n                                    <option value=\"0\">Please select</option>\r\n                                    {departments.map(dep=>\r\n                                    <option value={dep.id}>{dep.name}</option>\r\n                                        )}\r\n                                </CSelect>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">Prerequisites\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CSelect custom name=\"prerequisites\" id=\"select\" onChange={handleChange}>\r\n                                    <option value=\"0\">Please select</option>\r\n                                    {pre.map(dep=>\r\n                                    <option value={dep.code}>{dep.name}</option>\r\n                                        )}\r\n                                </CSelect>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Credit</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"number\" name=\"credit\" onChange={handleChange} defaultValue={course?.credit} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">ECT5</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"number\" name=\"ECT5\" onChange={handleChange} defaultValue={course?.ECT5} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={(e) => {props.setModal(!props.modal);handleSubmit(e)}}>\r\n                  Save changes\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Edit from './EditCourse'\r\nimport {\r\n  fetchCourses, getCourse,deleteCourse\r\n} from \"../../actions/coursesActions\";\r\nimport {\r\n  getTranscript\r\n} from \"../../actions/studentsActions\";\r\nconst AllCourses = () => {\r\n    const courses = useSelector((state) => state.courses.courses);\r\n    const course = useSelector((state) => state.courses.course);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const studentCourses = useSelector((state) => state.student.studentCourse);\r\n    const [modal, setModal] = useState(false)\r\n    let coursesShown \r\n    if(user?.status===\"SuperAdmin\"){\r\n      coursesShown=courses\r\n    }else{\r\n      coursesShown =courses.filter(course=>(course.departmentId===4 && course.facultyId===user?.faculty.id )||  course.departmentId===user?.department.id )\r\n    }\r\n    let swa = []\r\n    const myCourses = studentCourses.map(coursew=>{swa.push(...coursew?.courses)})\r\n    console.log(swa)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchCourses());\r\n    }, [dispatch,course]);\r\n    useEffect(() => {\r\n      if(user?.status===\"Student\"){\r\n        dispatch(getTranscript(user?.userId));\r\n      }\r\n  }, [dispatch,user]);\r\n    let columns = [\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,\r\n          cell: (row) => {\r\n            const done = swa.filter(swa=>swa.Course.id===row.id)\r\n            if(done.length>0){\r\n              return(\r\n                <p style={{ color: 'red' }}>{row.name}</p>\r\n              )\r\n            }else{\r\n              return(\r\n                <p >{row.name}</p>\r\n              )\r\n            }\r\n          }\r\n        },\r\n        {\r\n          selector: \"code\",\r\n          name: \"Code\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"semester\",\r\n          name: \"Semester\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"credit\",\r\n          name: \"Credit\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"ECT5\",\r\n          name: \"ECT5\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n               style={{margin: '1rem',cursor:\"pointer\"}}\r\n               onClick={() => {\r\n                 setModal(!modal);\r\n                 dispatch(getCourse(row.id))\r\n                 // getDepartmentData(row.id);\r\n               }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span    style={{cursor:\"pointer\"}}\r\n               onClick={() => {\r\n                 dispatch(deleteCourse(row.id))\r\n                 // getDepartmentData(row.id);\r\n               }} >\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n      const studentCol = columns.filter(col=>col.name!==\"Actions\");\r\n      \r\n  return (\r\n      <>\r\n      <Edit modal={modal} setModal={setModal}/>\r\n    <h2>{user?.department?.name} courses</h2>\r\n    <DataTable\r\n            columns={user?.status==='Chairman'|| user?.status==='SuperAdmin'\t?columns :studentCol}\r\n            data={coursesShown ? coursesShown : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllCourses\r\n"],"sourceRoot":""}