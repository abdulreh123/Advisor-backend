{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/studentsActions.js","views/students/EditStudent.js","views/students/AllStudent.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","fetchStudents","dispatch","axios","get","then","api","type","GET_STUDENTS","payload","data","catch","error","returnErrors","response","message","status","getStudent","id","branch","GET_STUDENT","getTimeTable","GET_TIMETABLE","getStudentStats","departmentId","GET_STUDENT_STATS","getStudentByAdvisor","GET__ADVISOR_STUDENTS","getTranscript","GET_TRANSCRIPT","AddStudents","post","ADD_STUDENT","AddRemoveCourses","put","automate","year","GET_AUTO_COURSE","CoursesApproval","COURSES_TO_APPROVE","Approval","studentId","courseId","COURSE_APPROVED","Modals","props","useState","setData","user","setUser","handleChange","e","target","parseInt","handleUser","show","modal","onClose","setModal","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","custom","onClick","AllStudent","students","useSelector","state","student","useDispatch","useEffect","columns","selector","sortable","cell","createdAt","replace","style","margin","ignoreRowClick","allowOverflow","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/20.4360408d.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_STUDENTS,\r\n    GET__ADVISOR_STUDENTS,\r\n    ADD_STUDENT,\r\n    GET_AUTO_COURSE,\r\n    GET_TRANSCRIPT,\r\n    GET_STUDENT,\r\n    COURSES_TO_APPROVE,\r\n    COURSE_APPROVED,\r\n    GET_STUDENT_STATS,\r\n    GET_TIMETABLE\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchStudents = () => dispatch => {\r\n    axios.get(`/api/student`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_STUDENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudent = (id) => dispatch => {\r\n    axios.get(`/api/student/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTimeTable = (id) => dispatch => {\r\n    axios.get(`/api/student/time-table/${id}?year=2021-2022 - Spring`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TIMETABLE,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentStats = (id,departmentId) => dispatch => {\r\n    axios.get(`/api/student/stats/${id}/${departmentId}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT_STATS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentByAdvisor = (id) => dispatch => {\r\n    axios.get(`/api/student/advisor/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET__ADVISOR_STUDENTS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTranscript = (id) => dispatch => {\r\n    axios.get(`/api/student/transcript/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TRANSCRIPT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddStudents = (data) => (dispatch) => {\r\n    axios.post(\"/api/student/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateStudent = (data, id) => (dispatch) => {\r\n    axios.put(`/api/student/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const AddRemoveCourses = (id, data) => (dispatch) => {\r\n    axios.put(`/api/student/add/remove/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const automate = (id, year) => (dispatch) => {\r\n    axios.get(`/api/student/automate/${id}?year=${year}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_AUTO_COURSE,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const CoursesApproval = (id) => (dispatch) => {\r\n    axios.get(`/api/student/get-approve/${id}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSES_TO_APPROVE,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const Approval = (studentId,courseId) => (dispatch) => {\r\n    axios.put(`/api/student//approve/${studentId}/${courseId}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSE_APPROVED,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteStudent = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/student/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n} from '@coreui/react'\r\n\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if(name==='userId'){\r\n            setData({\r\n                ...data,\r\n                [name]: parseInt(value)\r\n            })\r\n        }\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleUser = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    // const handleSubmit = (e) => {\r\n    //     const create = {\r\n    //         userId: data.userId,\r\n    //         name: data.name,\r\n    //         surname: data.surname,\r\n    //         advisorId: data.advisorId,\r\n    //         user: user\r\n    //     }\r\n    //     e.preventDefault();\r\n    //     dispatch(AddStudents({ ...create }));\r\n    //     document.getElementById(\"resetStudent\").reset()\r\n    // }\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Edit Student</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n                    <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetStudent\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Student ID</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"number\" name=\"userId\" onChange={handleChange} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Surname</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"surname\" onChange={handleChange} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Username</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"userName\" onChange={handleUser} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        {/* <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"email-input\">Email Input</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Enter Email\" autoComplete=\"email\"/>\r\n                    <CFormText className=\"help-block\">Please enter your email</CFormText>\r\n                  </CCol>\r\n                </CFormGroup> */}\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"password-input\">Password</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput type=\"password\" id=\"password-input\" name=\"password\" onChange={handleUser} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"date-input\">Date of birth</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput type=\"date\" id=\"date-input\" name=\"dob\" />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">advisor\r\n                                <CLabel htmlFor=\"select\">Select</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CSelect custom name=\"select\" id=\"select\">\r\n                                    <option value=\"0\">Please select</option>\r\n                                    <option value=\"1\">Option #1</option>\r\n                                    <option value=\"2\">Option #2</option>\r\n                                    <option value=\"3\">Option #3</option>\r\n                                </CSelect>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={() => props.setModal(!props.modal)}>\r\n                  Save changes\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Edit from './EditStudent'\r\nimport {\r\n  fetchStudents,\r\n} from \"../../actions/studentsActions\";\r\nconst AllStudent = () => {\r\n    const students = useSelector((state) => state.student.students);\r\n    const [modal, setModal] = useState(false)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchStudents());\r\n    }, [dispatch]);\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"userId\",\r\n          name: \"Student ID\",\r\n          sortable: true,\r\n        },\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"surname\",\r\n          name: \"Surname\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"createdAt\",\r\n          name: \"Registered\",\r\n          cell: row => (<span>{row.createdAt.replace('T', ' ').replace('.000Z', '')}</span>),\r\n          sortable: true,},\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n              style={{margin: '1rem'}}\r\n                onClick={() => {\r\n                  setModal(!modal);\r\n                  // getDepartmentData(row.id);\r\n                }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span >\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n  return (\r\n      <>\r\n    <Edit modal={modal} setModal={setModal}/>\r\n    <DataTable\r\n            columns={columns}\r\n            data={students ? students : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllStudent\r\n"],"sourceRoot":""}