{"version":3,"sources":["actions/departmentActions.js","actions/chairmanActions.js","views/departments/Edit.js","views/departments/AllDepartments.js"],"names":["fetchDepartment","dispatch","axios","get","then","api","type","GET_DEPARMENTS","payload","data","getDepartment","id","branch","ADD_DEPARTMENT","AddDepartment","post","updateDepartment","put","deleteDepartment","delete","groups","fetchChairman","GET_CHAIRMANS","catch","error","returnErrors","response","message","status","Modals","props","useState","setData","useDispatch","chairman","useSelector","state","chairmans","department","handleChange","e","target","value","name","show","modal","onClose","setModal","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","defaultValue","custom","map","dep","onClick","preventDefault","document","getElementById","reset","handleSubmit","AllDepartments","departments","user","auth","editModal","toggleEditModal","useEffect","columns","selector","sortable","cell","style","margin","cursor","ignoreRowClick","allowOverflow","studentCol","filter","col","Edit","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/25.e12fac83.chunk.js","sourcesContent":["import {\r\n    GET_DEPARMENTS,\r\n    ADD_DEPARTMENT\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchDepartment = () => dispatch => {\r\n    axios.get(`/api/department`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_DEPARMENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const getDepartment = (id) => dispatch => {\r\n    axios.get(`/api/department/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const AddDepartment = (data) => (dispatch) => {\r\n    axios.post(\"/api/department/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n }\r\nexport const updateDepartment = (data, id) => (dispatch) => {\r\n    axios.put(`/api/department/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n}\r\nexport const deleteDepartment = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/department/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\n","import {\r\n    GET_CHAIRMANS,\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { returnErrors } from \"./errorActions\";\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchChairman = () => dispatch => {\r\n    axios.get(`/api/chairman`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_CHAIRMANS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n// export const getBuildings = (id) => dispatch => {\r\n//     axios.get(`/api/buildings/${id}`,  )\r\n//         .then(buildings => {\r\n//             dispatch({\r\n//                 type: ADD_BUILDINGS,\r\n//                 payload: buildings.data.data\r\n//             });\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch(returnErrors(error.response.data.message, error.response.status));\r\n//         })\r\n// }\r\n// export const AddBuildings = (data) => (dispatch) => {\r\n//     axios.post(\"/api/buildings/create\", data,  )\r\n//         .then(buildings => {\r\n//             dispatch({\r\n//                 type: ADD_BUILDINGS,\r\n//                 payload: buildings.data.data\r\n//             });\r\n//             dispatch(returnErrors(buildings.data.message, buildings.status));\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch(returnErrors(error.response.data.message, error.response.status));\r\n//         })\r\n\r\n//  }\r\n// export const updateBuildings = (data, id) => (dispatch) => {\r\n//     axios.put(`/api/buildings/${id}`, data,  )\r\n//         .then(buildings => {\r\n//             dispatch({\r\n//                 type: ADD_BUILDINGS,\r\n//                 payload: buildings.data.data\r\n//             });\r\n//            dispatch(returnErrors(buildings.data.message, buildings.status));\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch(returnErrors(error.response.data.message, error.response.status));\r\n//         })\r\n\r\n// }\r\n// export const deleteBuildings = (id) => (dispatch) => {\r\n\r\n//     axios.delete(`/api/buildings/${id}`,  )\r\n//         .then(buildings => {\r\n//             dispatch({\r\n//                 type: ADD_BUILDINGS,\r\n//                 payload: buildings.data.data\r\n//             });\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch(returnErrors(error.response.data.message, error.response.status));\r\n//         })\r\n// }\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CSelect\r\n} from '@coreui/react'\r\nimport {\r\n    updateDepartment\r\n} from \"../../actions/departmentActions\";\r\nimport {  useDispatch,useSelector } from \"react-redux\";\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const dispatch = useDispatch();\r\n    const chairman = useSelector((state) => state.chairmans.chairmans);\r\n    const department = useSelector((state) => state.department.department);\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateDepartment({ ...data },department?.id));\r\n        document.getElementById(\"resetEditDepartment\").reset()\r\n    }\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Update Department</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n                    <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetEditDepartment\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} defaultValue={department?.name} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">Chairman\r\n                                <CLabel htmlFor=\"select\">Select</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CSelect custom name=\"chairmanId\" id=\"select\" onChange={handleChange}>\r\n                                    <option value=\"0\">Please select</option>\r\n                                    {chairman?.map(dep=>\r\n                                    <option value={dep.id}>{dep.name}</option>\r\n                                        )}\r\n                                </CSelect>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={(e) => {props.setModal(!props.modal);handleSubmit(e)}}>\r\n                  Update\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Edit from './Edit'\r\nimport {\r\n  fetchDepartment,deleteDepartment,getDepartment\r\n} from \"../../actions/departmentActions\";\r\nimport {\r\n    fetchChairman,\r\n} from \"../../actions/chairmanActions\";\r\nconst AllDepartments = () => {\r\n    const departments = useSelector((state) => state.department.departments);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const department = useSelector((state) => state.department.department);\r\n    const [editModal, toggleEditModal] = useState(false)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchDepartment());\r\n        dispatch(fetchChairman());\r\n    }, [dispatch,department]);\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"chairman\",\r\n          name: \"chairman\",\r\n          sortable: true,\r\n          cell: row => (<span>{row.chairman?.name}</span>)\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n              style={{margin: '1rem',cursor:\"pointer\"}}\r\n                onClick={() => {\r\n                  toggleEditModal(!editModal);\r\n                  dispatch(getDepartment(row.id));\r\n                }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span style={{cursor:\"pointer\"}}  onClick={() => {\r\n                  dispatch(deleteDepartment(row.id))\r\n                  // getDepartmentData(row.id);\r\n                }}>\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n      \r\n      const studentCol = columns.filter(col=>col.name!==\"Actions\");\r\n  return (\r\n      <>\r\n    <Edit modal={editModal} setModal={toggleEditModal}/>\r\n    <DataTable\r\n            columns={user?.status==='Chairman'|| user?.status==='SuperAdmin'\t?columns :studentCol}\r\n            data={departments ? departments : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllDepartments\r\n"],"sourceRoot":""}