{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","actions/advisorActions.js","actions/departmentActions.js","views/advisor/EditAdvisor.js","views/advisor/Advisor.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","fetchAdvisor","dispatch","axios","get","then","api","type","GET_ADVISOR","payload","data","catch","error","returnErrors","response","message","status","getadvisor","id","advisor","ADD_ADVISOR","AddAdvisor","post","getTimeTable","branch","GET_ADVISOR_TIMETABLE","updateAdvisor","put","deleteAdvisor","delete","fetchDepartment","GET_DEPARMENTS","getDepartment","ADD_DEPARTMENT","AddDepartment","updateDepartment","deleteDepartment","groups","Modals","props","useSelector","state","department","departments","useDispatch","useState","setData","user","setUser","handleChange","e","target","name","parseInt","handleUser","useEffect","show","modal","onClose","setModal","document","getElementById","reset","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","defaultValue","surname","custom","map","dep","onClick","create","departmentId","preventDefault","LinkName","styled","Link","MyStudent","advisors","auth","filter","columns","selector","sortable","cell","to","style","margin","cursor","ignoreRowClick","allowOverflow","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/12.1d78ffc4.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_ADVISOR,\r\n    ADD_ADVISOR,\r\n    GET_ADVISOR_TIMETABLE\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchAdvisor = () => dispatch => {\r\n    axios.get(`/api/advisor`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_ADVISOR,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getadvisor = (id) => dispatch => {\r\n    axios.get(`/api/advisor/${id}`,  )\r\n        .then(advisor => {\r\n            dispatch({\r\n                type: ADD_ADVISOR,\r\n                payload: advisor.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const AddAdvisor = (data) => (dispatch) => {\r\n    axios.post(\"/api/advisor/create\", data,  )\r\n        .then(advisor => {\r\n            dispatch({\r\n                type: ADD_ADVISOR,\r\n                payload: advisor.data.data\r\n            });\r\n           dispatch(returnErrors(advisor.data.message, advisor.status));\r\n        })\r\n         .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n         })\r\n\r\n }\r\n export const getTimeTable = (id) => dispatch => {\r\n    axios.get(`/api/advisor/time-table/${id}?year=2021-2022 - Fall`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_ADVISOR_TIMETABLE,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const updateAdvisor = (data, id) => (dispatch) => {\r\n    axios.put(`/api/advisor/${id}`, data,  )\r\n        .then(advisor => {\r\n            dispatch({\r\n                type: ADD_ADVISOR,\r\n                payload: advisor.data.data\r\n            });\r\n           dispatch(returnErrors(advisor.data.message, advisor.status));\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteAdvisor = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/advisor/${id}`,  )\r\n        .then(advisor => {\r\n            dispatch({\r\n                type: ADD_ADVISOR,\r\n                payload: advisor.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import {\r\n    GET_DEPARMENTS,\r\n    ADD_DEPARTMENT\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchDepartment = () => dispatch => {\r\n    axios.get(`/api/department`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_DEPARMENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const getDepartment = (id) => dispatch => {\r\n    axios.get(`/api/department/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const AddDepartment = (data) => (dispatch) => {\r\n    axios.post(\"/api/department/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n }\r\nexport const updateDepartment = (data, id) => (dispatch) => {\r\n    axios.put(`/api/department/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n}\r\nexport const deleteDepartment = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/department/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\n","import React, { useState,useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n} from '@coreui/react'\r\nimport {\r\n    fetchDepartment\r\n} from \"../../actions/departmentActions\";\r\nimport {\r\n    updateAdvisor\r\n  } from \"../../actions/advisorActions\";\r\n\r\nconst Modals = (props) => {\r\n    const advisor = useSelector((state) => state.advisor.advisor);\r\n    const department = useSelector((state) => state.department.departments);\r\n    const dispatch = useDispatch()\r\n    const [data, setData] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if(name==='userId'){\r\n            setData({\r\n                ...data,\r\n                [name]: parseInt(value)\r\n            })\r\n        }\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleUser = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        const create = {\r\n            name: data.name,\r\n            surname: data.surname,\r\n            departmentId: data.departmentId,\r\n            user: user\r\n        }\r\n        e.preventDefault();\r\n        dispatch(updateAdvisor({ ...create },advisor.id));\r\n        document.getElementById(\"resetAdvisor\").reset()\r\n        props.setModal(!props.modal)\r\n    }\r\n    useEffect(() => {\r\n        dispatch(fetchDepartment());\r\n    }, [dispatch]);\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => {props.setModal(!props.modal); document.getElementById(\"resetAdvisor\").reset()}}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Edit Student</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n                    <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetAdvisor\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} defaultValue={advisor?.name} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Surname</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"surname\" onChange={handleChange} defaultValue={advisor?.surname}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Username</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"userName\" onChange={handleUser} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        {/* <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"email-input\">Email Input</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Enter Email\" autoComplete=\"email\"/>\r\n                    <CFormText className=\"help-block\">Please enter your email</CFormText>\r\n                  </CCol>\r\n                </CFormGroup> */}\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"password-input\">Password</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput type=\"password\" id=\"password-input\" name=\"password\" onChange={handleUser} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">Department\r\n                                <CLabel htmlFor=\"select\">Select</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CSelect custom name=\"departmentId\" id=\"select\" onChange={handleChange} >\r\n                                    <option value=\"0\">Please select</option>{department?.map(dep=>\r\n                                    <option value={dep.id}>{dep.name}</option>\r\n                                        )}\r\n                                </CSelect>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={handleSubmit}>\r\n                  Save changes\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {Link} from 'react-router-dom'\r\nimport Edit from './EditAdvisor'\r\nimport {\r\n  fetchAdvisor,deleteAdvisor,getadvisor\r\n} from \"../../actions/advisorActions\";\r\nimport styled from 'styled-components'\r\nconst LinkName = styled(Link)`\r\n  color: #8d0000 !important;\r\n`;\r\nconst MyStudent = () => {\r\n    const advisors = useSelector((state) => state.advisor.advisors);\r\n    const advisor = useSelector((state) => state.advisor.advisor);\r\n    const department = useSelector((state) => state.auth.user.department.id);\r\n    const data= advisors.filter(advisor=>advisor.departmentId===department)\r\n    const [modal, setModal] = useState(false)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchAdvisor());\r\n    }, [dispatch,advisor]);\r\n\r\n    let columns = [\r\n      {\r\n        selector: \"name\",\r\n        name: \"Name\",\r\n        sortable: true,\r\n        cell: (row) => <LinkName to={`/advisorProfile/${row.id}`}>\r\n          {row.name + \" \" + row.surname}\r\n        </LinkName>\r\n      },\r\n      {\r\n        name: \"Actions\",\r\n        cell: (row) => (\r\n          <div className=\"table-icon\">\r\n            <span\r\n              style={{margin: '1rem',cursor:\"pointer\"}}\r\n              onClick={() => {\r\n                setModal(!modal);\r\n                dispatch(getadvisor(row.id));\r\n              }}\r\n            >\r\n                Edit\r\n            </span>\r\n            <span style={{cursor:\"pointer\"}} onClick={() => {\r\n                  dispatch(deleteAdvisor(row.id));\r\n                }}>\r\n                Delete\r\n            </span>\r\n          </div>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n      },\r\n      ];\r\n  return (\r\n      <>\r\n    <Edit modal={modal} setModal={setModal}/>\r\n    <DataTable\r\n            columns={columns}\r\n            data={data ? data : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyStudent\r\n"],"sourceRoot":""}