{"version":3,"sources":["actions/departmentActions.js","actions/coursesActions.js","views/courses/EditCourse.js","views/courses/AllCourses.js"],"names":["fetchDepartment","dispatch","axios","get","then","api","type","GET_DEPARMENTS","payload","data","AddDepartment","post","branch","ADD_DEPARTMENT","fetchCourses","GET_COURSES","catch","error","returnErrors","response","message","status","getCourse","id","course","ADD_COURSE","AddCourse","updateCourse","put","Modals","props","useState","setData","department","setDepartment","useDispatch","departments","useSelector","state","courses","handleChange","e","target","value","name","pre","filter","departmentId","useEffect","show","modal","onClose","setModal","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","defaultValue","code","semester","custom","map","dep","credit","ECT5","onClick","preventDefault","document","getElementById","reset","handleSubmit","AllCourses","user","auth","StudentDepartment","columns","selector","sortable","cell","style","margin","cursor","ignoreRowClick","allowOverflow","studentCol","col","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/25.c6df00d4.chunk.js","sourcesContent":["import {\r\n    GET_DEPARMENTS,\r\n    ADD_DEPARTMENT\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchDepartment = () => dispatch => {\r\n    axios.get(`/api/department`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_DEPARMENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const getDepartment = (id) => dispatch => {\r\n    axios.get(`/api/department/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const AddDepartment = (data) => (dispatch) => {\r\n    axios.post(\"/api/department/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n }\r\nexport const updateDepartment = (data, id) => (dispatch) => {\r\n    axios.put(`/api/department/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n}\r\nexport const deleteDepartment = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/department/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_DEPARTMENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\n","import {\r\n    GET_COURSES,\r\n    ADD_COURSE\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { returnErrors } from \"./errorActions\";\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchCourses = () => dispatch => {\r\n    axios.get(`/api/course`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_COURSES,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getCourse = (id) => dispatch => {\r\n    axios.get(`/api/course/${id}`,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddCourse = (data) => (dispatch) => {\r\n    axios.post(\"/api/course/create\", data,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n           dispatch(returnErrors(course.data.message, course.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateCourse = (data, id) => (dispatch) => {\r\n    axios.put(`/api/course/${id}`, data,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n            dispatch(returnErrors(course.data.message, course.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteCourse = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/course/${id}`,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React, { useState,useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n} from '@coreui/react'\r\nimport {\r\n  fetchDepartment\r\n} from \"../../actions/departmentActions\";\r\nimport {\r\n    updateCourse,\r\n    fetchCourses\r\n} from \"../../actions/coursesActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const [department, setDepartment] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const departments = useSelector((state) => state.department.departments);\r\n    const courses = useSelector((state) => state.courses.courses);\r\n    const course = useSelector((state) => state.courses.course);\r\n   \r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if(name==='departmentId'){\r\n            setDepartment(value)\r\n        }\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const pre= courses.filter(course=> course.departmentId==department )\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateCourse({ ...data },course.id));\r\n        document.getElementById(\"resetCourse\").reset()\r\n    }\r\n    useEffect(() => {\r\n        dispatch(fetchDepartment());\r\n        dispatch(fetchCourses());\r\n    }, [dispatch]);\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Edit Course</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetCourse\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} defaultValue={course?.name} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Code</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"code\" onChange={handleChange} defaultValue={course?.code }/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Semester</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"number\" name=\"semester\" onChange={handleChange} defaultValue={course?.semester}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">Department\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CSelect custom name=\"departmentId\" id=\"select\" onChange={handleChange} >\r\n                                    <option value=\"0\">Please select</option>\r\n                                    {departments.map(dep=>\r\n                                    <option value={dep.id}>{dep.name}</option>\r\n                                        )}\r\n                                </CSelect>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">Prerequisites\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CSelect custom name=\"prerequisites\" id=\"select\" onChange={handleChange}>\r\n                                    <option value=\"0\">Please select</option>\r\n                                    {pre.map(dep=>\r\n                                    <option value={dep.code}>{dep.name}</option>\r\n                                        )}\r\n                                </CSelect>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Credit</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"number\" name=\"credit\" onChange={handleChange} defaultValue={course?.credit} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">ECT5</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"number\" name=\"ECT5\" onChange={handleChange} defaultValue={course?.ECT5} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={(e) => {props.setModal(!props.modal);handleSubmit(e)}}>\r\n                  Save changes\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Edit from './EditCourse'\r\nimport {\r\n  fetchCourses, getCourse\r\n} from \"../../actions/coursesActions\";\r\nconst AllCourses = () => {\r\n    const courses = useSelector((state) => state.courses.courses);\r\n    const course = useSelector((state) => state.courses.course);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [modal, setModal] = useState(false)\r\n    const StudentDepartment =courses.filter(course=>course.departmentId===user?.department.id || course.departmentId===4)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchCourses());\r\n    }, [dispatch,course]);\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"code\",\r\n          name: \"Code\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"semester\",\r\n          name: \"Semester\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"credit\",\r\n          name: \"Credit\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"ECT5\",\r\n          name: \"ECT5\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n               style={{margin: '1rem',cursor:\"pointer\"}}\r\n               onClick={() => {\r\n                 setModal(!modal);\r\n                 dispatch(getCourse(row.id))\r\n                 // getDepartmentData(row.id);\r\n               }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span >\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n      const studentCol = columns.filter(col=>col.name!==\"Action\");\r\n  return (\r\n      <>\r\n      <Edit modal={modal} setModal={setModal}/>\r\n    <DataTable\r\n            columns={user.status==='Student'?studentCol :columns}\r\n            data={StudentDepartment ? StudentDepartment : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllCourses\r\n"],"sourceRoot":""}