{"version":3,"sources":["actions/studentsActions.js","actions/groupActions.js","views/profile/AddCourse.js","views/profile/AutoCourse.js","views/profile/StudentProfile.js"],"names":["fetchStudents","dispatch","axios","get","then","api","type","GET_STUDENTS","payload","data","catch","error","returnErrors","response","message","status","getStudent","id","branch","GET_STUDENT","getStudentByAdvisor","GET__ADVISOR_STUDENTS","getTranscript","GET_TRANSCRIPT","AddStudents","post","ADD_STUDENT","AddRemoveCourses","put","automate","year","GET_AUTO_COURSE","fetchGroup","GET_GROUPS","getGroupDepartment","group","GET_DEPARTMENT_GROUP","AddGroup","ADD_GROUP","MultiselectCosutm","styled","Multiselect","MultiSelectLabel","span","Modals","props","studentId","useState","setData","setyear","useDispatch","yearCourses","useSelector","state","departmentGroups","filter","course","courseOptions","map","name","handleCourses","e","courses","show","modal","onClose","setModal","color","closeButton","action","method","encType","className","row","custom","onChange","value","target","options","displayValue","onSelect","onRemove","onClick","create","preventDefault","document","getElementById","reset","Card","div","height","margin","background","padding","borderRadius","border","borderTop","textAlign","DataTable","Cell","CellHead","student","autoCourse","size","log","index","code","credit","IMG","img","BranchWrapper","Button","CButton","Category","Gpa","p","StudentProfile","match","params","user","studentCourse","autoModal","setAutoModal","useEffect","userId","advisor","departmentId","class","src","alt","surname","width","Fragment","studentsCourses","academicYear","Course","grade","CrPts","gpa","totalcredit","AddCourse","AutoCourse"],"mappings":"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","file":"static/js/20.7cac72ba.chunk.js","sourcesContent":["import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_STUDENTS,\r\n    GET__ADVISOR_STUDENTS,\r\n    ADD_STUDENT,\r\n    GET_AUTO_COURSE,\r\n    GET_TRANSCRIPT,\r\n    GET_STUDENT\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchStudents = () => dispatch => {\r\n    axios.get(`/api/student`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_STUDENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudent = (id) => dispatch => {\r\n    axios.get(`/api/student/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentByAdvisor = (id) => dispatch => {\r\n    axios.get(`/api/student/advisor/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET__ADVISOR_STUDENTS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTranscript = (id) => dispatch => {\r\n    axios.get(`/api/student/transcript/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TRANSCRIPT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddStudents = (data) => (dispatch) => {\r\n    axios.post(\"/api/student/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateStudent = (data, id) => (dispatch) => {\r\n    axios.put(`/api/student/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const AddRemoveCourses = (id, data) => (dispatch) => {\r\n    axios.put(`/api/student/add/remove/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const automate = (id, year) => (dispatch) => {\r\n    axios.get(`/api/student/automate/${id}?year=${year}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_AUTO_COURSE,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteStudent = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/student/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_GROUPS,\r\n    ADD_GROUP,\r\n    GET_DEPARTMENT_GROUP\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchGroup = () => dispatch => {\r\n    axios.get(`/api/group`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_GROUPS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getGroup = (id) => dispatch => {\r\n    axios.get(`/api/group/${id}`,  )\r\n        .then(group => {\r\n            dispatch({\r\n                type: ADD_GROUP,\r\n                payload: group.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const getGroupDepartment = (id) => dispatch => {\r\n    axios.get(`/api/group/department/${id}` )\r\n        .then(group => {\r\n            dispatch({\r\n                type: GET_DEPARTMENT_GROUP,\r\n                payload: group.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const AddGroup = (data) => (dispatch) => {\r\n    axios.post(\"/api/group/create\", data,  )\r\n        .then(group => {\r\n            dispatch({\r\n                type: ADD_GROUP,\r\n                payload: group.data.data\r\n            });\r\n           dispatch(returnErrors(group.data.message, group.status));\r\n        })\r\n         .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n         })\r\n\r\n }\r\nexport const updateGroup = (data, id) => (dispatch) => {\r\n    axios.put(`/api/group/${id}`, data,  )\r\n        .then(group => {\r\n            dispatch({\r\n                type: ADD_GROUP,\r\n                payload: group.data.data\r\n            });\r\n           dispatch(returnErrors(group.data.message, group.status));\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteGroup = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/group/${id}`,  )\r\n        .then(group => {\r\n            dispatch({\r\n                type: ADD_GROUP,\r\n                payload: group.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    CButton,\r\n    CCardBody,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CFormGroup,\r\n    CRow,\r\n    CCol,\r\n    CSelect,\r\n    CForm,\r\n} from '@coreui/react'\r\nimport styled from 'styled-components'\r\nimport {\r\n   AddRemoveCourses\r\n} from \"../../actions/studentsActions\";\r\nconst MultiselectCosutm = styled(Multiselect)`\r\n  margin-bottom: 4px;\r\n`;\r\nconst MultiSelectLabel = styled.span`\r\n  font-size: 0.8rem;\r\n  color: var(--secondary-text-color);\r\n`;\r\nconst Modals = (props) => {\r\n    const studentId = props.studentId\r\n    const [data, setData] = useState({});\r\n    const [year, setyear] = useState('');\r\n    const dispatch= useDispatch()\r\n    const courses = useSelector((state) => state.group.departmentGroups);\r\n    const yearCourses = courses.filter(course=>course.year===year)\r\n    let courseOptions = yearCourses?.map((course) => ({\r\n        id: course.id,\r\n        name: course.name,\r\n    }));\r\n    const handleCourses = (e) => {\r\n        setData({\r\n            ...data,\r\n            courses: e,\r\n        });\r\n    };\r\n    const handleChange=(e)=>{\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setyear(value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        const courses = data?.courses.map(course=>course.id)\r\n        const create = {\r\n            type:'add',\r\n            year: year,\r\n            courses:courses\r\n\r\n        }\r\n        e.preventDefault();\r\n        dispatch(AddRemoveCourses(studentId,{ ...create }));\r\n        props.setModal(!props.modal)\r\n        document.getElementById(\"resetAdd\").reset()\r\n    }\r\n    return (\r\n        <CRow>\r\n            <CCardBody>\r\n                <CModal\r\n                    show={props.modal}\r\n                    onClose={() => props.setModal(!props.modal)}\r\n                    color=\"primary\"\r\n                >\r\n                    <CModalHeader closeButton>\r\n                        <CModalTitle>Add courses</CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody>\r\n                        <CCardBody>\r\n                            <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetAdd\">\r\n                                <CFormGroup row>\r\n                                    <MultiSelectLabel>Acadamic Year :</MultiSelectLabel>\r\n                                        <CSelect custom name=\"select\" id=\"select\" onChange={handleChange}>\r\n                                            <option value=\"0\">Please select</option>\r\n                                            <option value=\"2020-2021 - Fall\">2020-2021 - Fall</option>\r\n                                            <option value=\"2020-2021 - Spring\">2020-2021 - Spring</option>\r\n                                            <option value=\"2020-2021 - Summer\">2020-2021 - Summer</option>\r\n                                        </CSelect>\r\n                                    <MultiSelectLabel>Courses :</MultiSelectLabel>\r\n                                    <MultiselectCosutm\r\n                                        id=\"watchers\"\r\n                                        options={courseOptions}\r\n                                        displayValue=\"name\"\r\n                                        onSelect={handleCourses}\r\n                                        onRemove={handleCourses}\r\n                                    />\r\n                                </CFormGroup>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                    </CModalBody>\r\n                    <CModalFooter>\r\n                        <CButton color=\"primary\" onClick={handleSubmit}>\r\n                            Add\r\n                        </CButton>{' '}\r\n                        <CButton color=\"secondary\" onClick={() => props.setModal(!props.modal)}>\r\n                            Cancel\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCardBody>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default Modals\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    CButton,\r\n    CCardBody,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CFormGroup,\r\n    CRow,\r\n    CSelect,\r\n    CForm,\r\n} from '@coreui/react'\r\nimport styled from 'styled-components'\r\nimport {\r\n    automate\r\n} from \"../../actions/studentsActions\";\r\nconst MultiSelectLabel = styled.span`\r\n  font-size: 0.8rem;\r\n  color: var(--secondary-text-color);\r\n`;\r\nconst Card = styled.div`\r\ndisplay: flex;\r\nheight: ${(props) => props.height};\r\nmargin: ${(props) => props.margin};\r\nflex-direction: column;\r\ncolor: ${(props) => props.color || \"#4e4e51\"};\r\nbackground: ${(props) => props.background || \"#fff\"};\r\npadding: ${(props) => props.padding || \"10px 17px\"};\r\nborder-radius: ${(props) => props.borderRadius || \"8px\"};\r\nborder: ${(props) => props.border || \"1px solid #E6E9ED\"};\r\nborder-top: ${(props) => props.borderTop};\r\nopacity: 1;\r\ntransition: all 0.2s ease;\r\ntext-align: ${(props) => props.textAlign};\r\n`;\r\nconst DataTable = styled(Card)`\r\n    display: grid;\r\n    grid-template-columns: 33% 46% 20% ;\r\n    border: 0.5px solid #e3e4e8 !important;\r\n    margin: 1.5rem 2rem 2rem 2rem;\r\n    padding: 0 !important;\r\n`;\r\nconst Cell = styled.div`\r\n    border: 0.5px solid #E6E9ED;\r\n    height: 2rem;\r\n    text-align: center;\r\n    padding: 3px;\r\n`;\r\nconst CellHead = styled.div`\r\n    padding: 12px;\r\n    border: 0.5px solid #E6E9ED;\r\n    height: 3rem;\r\n    text-align: center;\r\n    font-weight: 550;\r\n`;\r\nconst Modals = (props) => {\r\n    const studentId = props.studentId\r\n    const dispatch = useDispatch()\r\n    const courses = useSelector((state) => state.student.autoCourse);\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        dispatch(automate(studentId, value));\r\n    }\r\n    let columns = [\r\n        {\r\n            selector: \"name\",\r\n            name: \"name\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            selector: \"code\",\r\n            name: \"Code\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            selector: \"credit\",\r\n            name: \"Credit\",\r\n            sortable: true,\r\n        },\r\n    ];\r\n    return (\r\n        <CRow>\r\n            <CCardBody>\r\n                <CModal\r\n                    show={props.modal}\r\n                    onClose={() => props.setModal(!props.modal)}\r\n                    color=\"primary\"\r\n                    size=\"lg\"\r\n                >\r\n                    <CModalHeader closeButton>\r\n                        <CModalTitle>Next courses</CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody>\r\n                        <CCardBody>\r\n                            <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetAdd\">\r\n                                <CFormGroup row>\r\n                                    <MultiSelectLabel>Acadamic Year :</MultiSelectLabel>\r\n                                    <CSelect custom name=\"select\" id=\"select\" onChange={handleChange}>\r\n                                        <option value=\"0\">Please select</option>\r\n                                        <option value=\"2020-2021 - Spring\">2020-2021 - Spring</option>\r\n                                        <option value=\"2020-2021 - Fall\">2020-2021 - Fall</option>\r\n                                    </CSelect>\r\n                                </CFormGroup>\r\n                            </CForm>\r\n\r\n                            <DataTable>\r\n                                <CellHead>Code</CellHead>\r\n                                <CellHead>Name</CellHead>\r\n                                <CellHead>Credit</CellHead>\r\n                                {courses.map((log, index) =>\r\n                                    <>\r\n                                        <Cell>{log.code}</Cell>\r\n                                        <Cell>{log.name}</Cell>\r\n                                        <Cell>{log.credit}</Cell></>\r\n\r\n                                )}\r\n                            </DataTable>\r\n                        </CCardBody>\r\n                    </CModalBody>\r\n                    <CModalFooter>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCardBody>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default Modals\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AddCourse from './AddCourse'\r\nimport AutoCourse from './AutoCourse'\r\nimport styled from 'styled-components';\r\nimport AllPayment from './payments'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    getStudent, getTranscript\r\n} from \"../../actions/studentsActions\";\r\nimport {\r\n    getGroupDepartment\r\n} from \"../../actions/groupActions\";\r\nimport {\r\n    CButton,\r\n} from '@coreui/react'\r\nconst IMG = styled.img`\r\n  width:47%;\r\n  `\r\nconst BranchWrapper = styled.div`\r\n`;\r\nconst Card = styled.div`\r\n  display: flex;\r\n  height: ${(props) => props.height};\r\n  margin: ${(props) => props.margin};\r\n  flex-direction: column;\r\n  color: ${(props) => props.color || \"#4e4e51\"};\r\n  background: ${(props) => props.background || \"#fff\"};\r\n  padding: ${(props) => props.padding || \"10px 17px\"};\r\n  border-radius: ${(props) => props.borderRadius || \"8px\"};\r\n  border: ${(props) => props.border || \"1px solid #E6E9ED\"};\r\n  border-top: ${(props) => props.borderTop};\r\n  opacity: 1;\r\n  transition: all 0.2s ease;\r\n  text-align: ${(props) => props.textAlign};\r\n`;\r\nconst DataTable = styled(Card)`\r\n    display: grid;\r\n    grid-template-columns: 24% 40% 11% 10% 15%;\r\n    border: 0.5px solid #e3e4e8 !important;\r\n    margin: 1.5rem 2rem 2rem 2rem;\r\n    padding: 0 !important;\r\n`;\r\nconst Button = styled(CButton)`\r\nmargin-right: 1rem;\r\n`;\r\nconst Payment = styled(CButton)`\r\nmargin-left: 1rem;\r\n`;\r\nconst Cell = styled.div`\r\n    border: 0.5px solid #E6E9ED;\r\n    height: 2rem;\r\n    text-align: center;\r\n    padding: 3px;\r\n`;\r\nconst CellHead = styled.div`\r\n    padding: 12px;\r\n    border: 0.5px solid #E6E9ED;\r\n    height: 3rem;\r\n    text-align: center;\r\n    font-weight: 550;\r\n`;\r\nconst Category = styled.div`\r\n    margin: 2rem 2rem 0 2rem;\r\n    border-bottom: 1px solid #e3e4e8;\r\n    font-size: 1.2rem;    \r\n    text-align: center;\r\n`;\r\nconst Gpa = styled.p`\r\ntext-align: center;\r\n`;\r\nconst StudentProfile = (props) => {\r\n    const student = props.match.params.id\r\n    const user = useSelector((state) => state.student.student);\r\n    const courses = useSelector((state) => state.student.studentCourse);\r\n    const [modal, setModal] = useState(false)\r\n    const [autoModal, setAutoModal] = useState(false)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getStudent(student));\r\n        dispatch(getTranscript(user?.userId));\r\n    }, [dispatch, student]);\r\n    useEffect(() => {\r\n        dispatch(getTranscript(user?.userId));\r\n        dispatch(getGroupDepartment(user?.advisor?.departmentId));\r\n    }, [dispatch, user]);\r\n    return (\r\n        <div class=\"student-profile py-4\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-4\">\r\n                        <div class=\"card shadow-sm\">\r\n                            <div class=\"card-header bg-transparent text-center\">\r\n                                <IMG\r\n                                    src={'avatars/6.jpg'}\r\n                                    className=\"c-avatar-img\"\r\n                                    alt=\"admin@bootstrapmaster.com\"\r\n                                />\r\n                                <h3>\r\n                                    {user?.name + \" \" + user?.surname}</h3>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <p class=\"mb-0\"><strong class=\"pr-1\">Student ID:</strong>{user?.userId}</p>\r\n                                <p class=\"mb-0\"><strong class=\"pr-1\">Department:</strong>4</p>\r\n                                <p class=\"mb-0\"><strong class=\"pr-1\">Advisor:</strong>{user?.advisor?.name}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-8\">\r\n                        <div class=\"card shadow-sm\">\r\n                            <div class=\"card-header bg-transparent border-0\">\r\n                                <h3 class=\"mb-0\"><i class=\"far fa-clone pr-1\"></i>General Information</h3>\r\n                            </div>\r\n                            <div class=\"card-body pt-0\">\r\n                                <table class=\"table table-bordered\">\r\n                                    <tr>\r\n                                        <th width=\"30%\">Roll</th>\r\n                                        <td width=\"2%\">:</td>\r\n                                        <td>125</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th width=\"30%\">Academic Year\t</th>\r\n                                        <td width=\"2%\">:</td>\r\n                                        <td>2020</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th width=\"30%\">Gender</th>\r\n                                        <td width=\"2%\">:</td>\r\n                                        <td>Male</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th width=\"30%\">Religion</th>\r\n                                        <td width=\"2%\">:</td>\r\n                                        <td>Group</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th width=\"30%\">blood</th>\r\n                                        <td width=\"2%\">:</td>\r\n                                        <td>B+</td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={() => setModal(!modal)}>\r\n                                Add courses\r\n                            </Button>\r\n                            <CButton color=\"primary\" onClick={() => setAutoModal(!autoModal)}>\r\n                                Automate Selection\r\n                            </CButton></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n             Payments\r\n            <AllPayment studentId={user?.userId} />\r\n            <BranchWrapper>\r\n                {courses?.map((course, index) =>\r\n                    <div margin=\"2rem\" key={index} >\r\n\r\n                        <Category>\r\n                            Academic year {course.year}\r\n                        </Category>\r\n                        <DataTable>\r\n                            <CellHead>Code</CellHead>\r\n                            <CellHead>Name</CellHead>\r\n                            <CellHead>Credit</CellHead>\r\n                            <CellHead>grade</CellHead>\r\n                            <CellHead>CrPts</CellHead>\r\n                            {course?.courses?.map((log, index) =>\r\n                                <React.Fragment key={index} >\r\n                                    {log.studentsCourses.academicYear === course.year ?\r\n                                        <>\r\n                                            <Cell>{log.Course.code}</Cell>\r\n                                            <Cell>{log.Course.name}</Cell>\r\n                                            <Cell>{log.Course.credit}</Cell>\r\n                                            <Cell>{log.studentsCourses?.grade}</Cell>\r\n                                            <Cell>{log.studentsCourses?.CrPts}</Cell> </> : null}\r\n\r\n                                </React.Fragment>\r\n\r\n                            )}\r\n                        </DataTable>\r\n                        <Gpa>AVERAGE: {course.gpa} / OVERALL AVERAGE: {course.gpa}/ STATUS : Successful / TOTAL : {course.totalcredit}</Gpa>\r\n\r\n                    </div>\r\n                )}\r\n            </BranchWrapper>\r\n\r\n            <AddCourse modal={modal} setModal={setModal} studentId={student} />\r\n            <AutoCourse modal={autoModal} setModal={setAutoModal} studentId={student} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentProfile\r\n"],"sourceRoot":""}