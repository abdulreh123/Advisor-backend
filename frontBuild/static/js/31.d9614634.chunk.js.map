{"version":3,"sources":["actions/buildingActions.js","views/buildings/Create.js","views/buildings/Edit.js","views/buildings/AllBuildings.js"],"names":["fetchBuildings","dispatch","axios","get","then","api","type","GET_BUILDINGS","payload","data","catch","error","returnErrors","response","message","status","getBuildings","id","buildings","ADD_BUILDINGS","AddBuildings","post","updateBuildings","put","deleteBuildings","delete","Modals","props","useState","setData","useDispatch","handleChange","e","target","value","name","show","modal","onClose","setModal","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","onClick","preventDefault","document","getElementById","reset","handleSubmit","building","useSelector","state","defaultValue","longitude","latitude","Button","styled","CButton","AllBuildings","addModal","setAddModal","editModal","toggleEditModal","useEffect","columns","selector","sortable","cell","style","margin","ignoreRowClick","allowOverflow","block","Edit","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/31.d9614634.chunk.js","sourcesContent":["import {\r\n    GET_BUILDINGS,\r\n    ADD_BUILDINGS\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { returnErrors } from \"./errorActions\";\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchBuildings = () => dispatch => {\r\n    axios.get(`/api/buildings`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_BUILDINGS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getBuildings = (id) => dispatch => {\r\n    axios.get(`/api/buildings/${id}`,  )\r\n        .then(buildings => {\r\n            dispatch({\r\n                type: ADD_BUILDINGS,\r\n                payload: buildings.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddBuildings = (data) => (dispatch) => {\r\n    axios.post(\"/api/buildings/create\", data,  )\r\n        .then(buildings => {\r\n            dispatch({\r\n                type: ADD_BUILDINGS,\r\n                payload: buildings.data.data\r\n            });\r\n            dispatch(returnErrors(buildings.data.message, buildings.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateBuildings = (data, id) => (dispatch) => {\r\n    axios.put(`/api/buildings/${id}`, data,  )\r\n        .then(buildings => {\r\n            dispatch({\r\n                type: ADD_BUILDINGS,\r\n                payload: buildings.data.data\r\n            });\r\n           dispatch(returnErrors(buildings.data.message, buildings.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteBuildings = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/buildings/${id}`,  )\r\n        .then(buildings => {\r\n            dispatch({\r\n                type: ADD_BUILDINGS,\r\n                payload: buildings.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n} from '@coreui/react'\r\nimport {\r\n  AddBuildings\r\n} from \"../../actions/buildingActions\";\r\nimport {  useDispatch } from \"react-redux\";\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const dispatch = useDispatch();\r\n   \r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(AddBuildings({ ...data }));\r\n        document.getElementById(\"resetBuilding\").reset()\r\n    }\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>New Building</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetBuilding\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Longitude</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"float\" name=\"longitude\" onChange={handleChange}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Latitude</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"float\" name=\"latitude\" onChange={handleChange} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={(e) => {props.setModal(!props.modal);handleSubmit(e)}}>\r\n                  Add\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n} from '@coreui/react'\r\nimport {\r\n    updateBuildings\r\n} from \"../../actions/buildingActions\";\r\nimport {  useDispatch,useSelector } from \"react-redux\";\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const dispatch = useDispatch();\r\n    const building = useSelector((state) => state.building.building);\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateBuildings({ ...data },building?.id));\r\n        document.getElementById(\"resetBuilding\").reset()\r\n    }\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Update Building</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetBuilding\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} defaultValue={building?.name}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Longitude</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"float\" name=\"longitude\" onChange={handleChange} defaultValue={building?.longitude}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Latitude</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"float\" name=\"latitude\" onChange={handleChange} defaultValue={building?.latitude}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={(e) => {props.setModal(!props.modal);handleSubmit(e)}}>\r\n                  Update\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from 'styled-components';\r\nimport {\r\n  CButton,\r\n} from '@coreui/react'\r\nimport {\r\n  fetchBuildings,getBuildings,deleteBuildings,\r\n} from \"../../actions/buildingActions\";\r\nimport Add from './Create'\r\nimport Edit from './Edit'\r\n\r\nconst Button = styled(CButton)`\r\nwidth: 4rem;\r\n`;\r\nconst AllBuildings = () => {\r\n    const buildings = useSelector((state) => state.building.buildings);\r\n    const building = useSelector((state) => state.building.building);\r\n    const [addModal, setAddModal] = useState(false)\r\n    const [editModal, toggleEditModal] = useState(false)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchBuildings());\r\n    }, [dispatch,building]);\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"longitude\",\r\n          name: \"Longitude\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"latitude\",\r\n          name: \"Latitude\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n              style={{margin: '1rem'}}\r\n                onClick={() => {\r\n                  toggleEditModal(!editModal);\r\n                  dispatch(getBuildings(row.id));\r\n                }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span  onClick={() => {\r\n                  dispatch(deleteBuildings(row.id));\r\n                }}>\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n  return (\r\n      <>\r\n      <Add modal={addModal} setModal={setAddModal}/>\r\n      <Button block color=\"primary\" onClick={() =>setAddModal(true)}>Add</Button>\r\n      <Edit modal={editModal} setModal={toggleEditModal}/>\r\n    <DataTable\r\n            columns={columns}\r\n            data={buildings ? buildings : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllBuildings\r\n"],"sourceRoot":""}