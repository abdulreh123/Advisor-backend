{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","actions/buildingActions.js","views/buildings/Create.js","views/buildings/Edit.js","views/buildings/AllBuildings.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","_taggedTemplateLiteral","strings","raw","freeze","defineProperties","fetchBuildings","dispatch","axios","get","then","api","type","GET_BUILDINGS","payload","data","catch","error","returnErrors","response","message","status","getBuildings","id","buildings","ADD_BUILDINGS","AddBuildings","post","updateBuildings","put","Modals","props","useState","setData","useDispatch","handleChange","e","target","show","modal","onClose","setModal","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","onClick","preventDefault","document","getElementById","reset","handleSubmit","building","useSelector","state","defaultValue","longitude","latitude","Button","styled","CButton","AllBuildings","addModal","setAddModal","editModal","toggleEditModal","useEffect","columns","selector","sortable","cell","style","margin","ignoreRowClick","allowOverflow","block","Edit","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/20.4767679c.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import {\r\n    GET_BUILDINGS,\r\n    ADD_BUILDINGS\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { returnErrors } from \"./errorActions\";\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchBuildings = () => dispatch => {\r\n    axios.get(`/api/buildings`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_BUILDINGS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getBuildings = (id) => dispatch => {\r\n    axios.get(`/api/buildings/${id}`,  )\r\n        .then(buildings => {\r\n            dispatch({\r\n                type: ADD_BUILDINGS,\r\n                payload: buildings.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddBuildings = (data) => (dispatch) => {\r\n    axios.post(\"/api/buildings/create\", data,  )\r\n        .then(buildings => {\r\n            dispatch({\r\n                type: ADD_BUILDINGS,\r\n                payload: buildings.data.data\r\n            });\r\n            dispatch(returnErrors(buildings.data.message, buildings.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateBuildings = (data, id) => (dispatch) => {\r\n    axios.put(`/api/buildings/${id}`, data,  )\r\n        .then(buildings => {\r\n            dispatch({\r\n                type: ADD_BUILDINGS,\r\n                payload: buildings.data.data\r\n            });\r\n           dispatch(returnErrors(buildings.data.message, buildings.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteBuildings = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/buildings/${id}`,  )\r\n        .then(buildings => {\r\n            dispatch({\r\n                type: ADD_BUILDINGS,\r\n                payload: buildings.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n} from '@coreui/react'\r\nimport {\r\n  AddBuildings\r\n} from \"../../actions/buildingActions\";\r\nimport {  useDispatch } from \"react-redux\";\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const dispatch = useDispatch();\r\n   \r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(AddBuildings({ ...data }));\r\n        document.getElementById(\"resetBuilding\").reset()\r\n    }\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>New Building</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetBuilding\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Longitude</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"float\" name=\"longitude\" onChange={handleChange}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Latitude</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"float\" name=\"latitude\" onChange={handleChange} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={(e) => {props.setModal(!props.modal);handleSubmit(e)}}>\r\n                  Add\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n} from '@coreui/react'\r\nimport {\r\n    updateBuildings\r\n} from \"../../actions/buildingActions\";\r\nimport {  useDispatch,useSelector } from \"react-redux\";\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const dispatch = useDispatch();\r\n    const building = useSelector((state) => state.building.building);\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateBuildings({ ...data },building?.id));\r\n        document.getElementById(\"resetBuilding\").reset()\r\n    }\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Update Building</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetBuilding\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} defaultValue={building?.name}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Longitude</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"float\" name=\"longitude\" onChange={handleChange} defaultValue={building?.longitude}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Latitude</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"float\" name=\"latitude\" onChange={handleChange} defaultValue={building?.latitude}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={(e) => {props.setModal(!props.modal);handleSubmit(e)}}>\r\n                  Update\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from 'styled-components';\r\nimport {\r\n  CButton,\r\n} from '@coreui/react'\r\nimport {\r\n  fetchBuildings,getBuildings\r\n} from \"../../actions/buildingActions\";\r\nimport Add from './Create'\r\nimport Edit from './Edit'\r\n\r\nconst Button = styled(CButton)`\r\nwidth: 4rem;\r\n`;\r\nconst AllBuildings = () => {\r\n    const buildings = useSelector((state) => state.building.buildings);\r\n    const building = useSelector((state) => state.building.building);\r\n    const [addModal, setAddModal] = useState(false)\r\n    const [editModal, toggleEditModal] = useState(false)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchBuildings());\r\n    }, [dispatch,building]);\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"longitude\",\r\n          name: \"Longitude\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"latitude\",\r\n          name: \"Latitude\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n              style={{margin: '1rem'}}\r\n                onClick={() => {\r\n                  toggleEditModal(!editModal);\r\n                  dispatch(getBuildings(row.id));\r\n                }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span >\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n  return (\r\n      <>\r\n      <Add modal={addModal} setModal={setAddModal}/>\r\n      <Button block color=\"primary\" onClick={() =>setAddModal(true)}>Add</Button>\r\n      <Edit modal={editModal} setModal={toggleEditModal}/>\r\n    <DataTable\r\n            columns={columns}\r\n            data={buildings ? buildings : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllBuildings\r\n"],"sourceRoot":""}