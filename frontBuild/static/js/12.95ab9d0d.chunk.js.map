{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","actions/studentsActions.js","actions/advisorActions.js","views/students/EditStudent.js","views/students/Mystudents.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","fetchStudents","dispatch","axios","get","then","api","type","GET_STUDENTS","payload","data","catch","error","returnErrors","response","message","status","getChairmanStat","id","GET_CHAIRMAN_STATS","getStudent","branch","GET_STUDENT","getTimeTable","GET_TIMETABLE","getStudentStats","departmentId","GET_STUDENT_STATS","getStudentByAdvisor","GET__ADVISOR_STUDENTS","getTranscript","GET_TRANSCRIPT","AddStudents","post","ADD_STUDENT","updateStudent","put","updateGrade","studentId","courseID","AddRemoveCourses","automate","year","GET_AUTO_COURSE","CoursesApproval","COURSES_TO_APPROVE","Approval","courseId","COURSE_APPROVED","fetchAdvisor","GET_ADVISOR","getadvisor","advisor","ADD_ADVISOR","AddAdvisor","Modals","props","useState","setData","user","setUser","student","useSelector","state","advisors","handleChange","e","target","name","parseInt","handleUser","useDispatch","useEffect","show","modal","onClose","setModal","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","defaultValue","userId","surname","custom","map","dep","onClick","create","advisorId","preventDefault","document","getElementById","reset","handleSubmit","LinkName","styled","Link","MyStudent","students","auth","columns","selector","sortable","cell","to","createdAt","replace","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/12.95ab9d0d.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_STUDENTS,\r\n    GET__ADVISOR_STUDENTS,\r\n    ADD_STUDENT,\r\n    GET_AUTO_COURSE,\r\n    GET_TRANSCRIPT,\r\n    GET_STUDENT,\r\n    COURSES_TO_APPROVE,\r\n    COURSE_APPROVED,\r\n    GET_STUDENT_STATS,\r\n    GET_TIMETABLE,\r\n    GET_CHAIRMAN_STATS,\r\n    GET_PREDICTED_CGPA\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchStudents = () => dispatch => {\r\n    axios.get(`/api/student`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_STUDENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getChairmanStat = (id) => dispatch => {\r\n    axios.get(`/api/chairman/statistics/${id}`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_CHAIRMAN_STATS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudent = (id) => dispatch => {\r\n    axios.get(`/api/student/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTimeTable = (id) => dispatch => {\r\n    axios.get(`/api/student/time-table/${id}?year=2021-2022 - Spring`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TIMETABLE,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentStats = (id,departmentId) => dispatch => {\r\n    axios.get(`/api/student/stats/${id}/${departmentId}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT_STATS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentByAdvisor = (id) => dispatch => {\r\n    axios.get(`/api/student/advisor/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET__ADVISOR_STUDENTS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTranscript = (id) => dispatch => {\r\n    axios.get(`/api/student/transcript/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TRANSCRIPT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddStudents = (data) => (dispatch) => {\r\n    axios.post(\"/api/student/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateStudent = (data, id) => (dispatch) => {\r\n    axios.put(`/api/student/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const updateGrade = (data, studentId,courseID) => (dispatch) => {\r\n    axios.put(`/api/student/${studentId}/${courseID}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const AddRemoveCourses = (id, data) => (dispatch) => {\r\n    axios.put(`/api/student/add/remove/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const predictedCgpa = (cgpas) => (dispatch) => {\r\n    axios.get(`http://localhost:8000/predict/%7Bvalue%7D?name=[${cgpas}]`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_PREDICTED_CGPA,\r\n                payload: branch.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const automate = (id, year) => (dispatch) => {\r\n    axios.get(`/api/student/automate/${id}?year=${year}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_AUTO_COURSE,\r\n                payload: branch.data.data\r\n            });\r\n          // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const CoursesApproval = (id) => (dispatch) => {\r\n    axios.get(`/api/student/get-approve/${id}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSES_TO_APPROVE,\r\n                payload: branch.data.data\r\n            });\r\n         //  dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const Approval = (studentId,courseId) => (dispatch) => {\r\n    axios.put(`/api/student//approve/${studentId}/${courseId}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSE_APPROVED,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteStudent = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/student/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_ADVISOR,\r\n    ADD_ADVISOR,\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchAdvisor = () => dispatch => {\r\n    axios.get(`/api/advisor`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_ADVISOR,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getadvisor = (id) => dispatch => {\r\n    axios.get(`/api/advisor/${id}`,  )\r\n        .then(advisor => {\r\n            dispatch({\r\n                type: ADD_ADVISOR,\r\n                payload: advisor.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const AddAdvisor = (data) => (dispatch) => {\r\n    axios.post(\"/api/advisor/create\", data,  )\r\n        .then(advisor => {\r\n            dispatch({\r\n                type: ADD_ADVISOR,\r\n                payload: advisor.data.data\r\n            });\r\n           dispatch(returnErrors(advisor.data.message, advisor.status));\r\n        })\r\n         .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n         })\r\n\r\n }\r\nexport const updateAdvisor = (data, id) => (dispatch) => {\r\n    axios.put(`/api/advisor/${id}`, data,  )\r\n        .then(advisor => {\r\n            dispatch({\r\n                type: ADD_ADVISOR,\r\n                payload: advisor.data.data\r\n            });\r\n           dispatch(returnErrors(advisor.data.message, advisor.status));\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteAdvisor = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/advisor/${id}`,  )\r\n        .then(advisor => {\r\n            dispatch({\r\n                type: ADD_ADVISOR,\r\n                payload: advisor.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React, { useState,useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n} from '@coreui/react'\r\nimport {\r\n    fetchAdvisor,\r\n} from \"../../actions/advisorActions\";\r\nimport {\r\n    updateStudent\r\n} from \"../../actions/studentsActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst Modals = (props) => {\r\n    const [data, setData] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const student = useSelector((state) => state.student.student);\r\n    const advisor = useSelector((state) => state.advisor.advisors);\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if(name==='userId'){\r\n            setData({\r\n                ...data,\r\n                [name]: parseInt(value)\r\n            })\r\n        }\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleUser = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        const create = {\r\n            userId: data.userId,\r\n            name: data.name,\r\n            surname: data.surname,\r\n            advisorId: data.advisorId,\r\n            user: user\r\n        }\r\n        e.preventDefault();\r\n        dispatch(updateStudent({ ...create },student?.id));\r\n        document.getElementById(\"resetUpdateStudent\").reset()\r\n    }\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchAdvisor());\r\n    }, [dispatch]);\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => props.setModal(!props.modal)}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Edit Student</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n                    <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetUpdateStudent\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Student ID</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"number\" name=\"userId\" onChange={handleChange} defaultValue={student?.userId}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} defaultValue={student?.name}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Surname</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"surname\" onChange={handleChange} defaultValue={student?.surname}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Username</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"userName\" onChange={handleUser} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        {/* <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"email-input\">Email Input</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Enter Email\" autoComplete=\"email\"/>\r\n                    <CFormText className=\"help-block\">Please enter your email</CFormText>\r\n                  </CCol>\r\n                </CFormGroup> */}\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"password-input\">Password</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput type=\"password\" id=\"password-input\" name=\"password\" onChange={handleUser} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"date-input\">Date of birth</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput type=\"date\" id=\"date-input\" name=\"dob\" />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">advisor\r\n                                <CLabel htmlFor=\"select\">Select</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CSelect custom name=\"select\" id=\"select\">\r\n                                <option value=\"0\">Please select</option>{advisor?.map(dep=>\r\n                                    <option value={dep.id} >{dep.name + \" \" + dep.surname}</option>\r\n                                        )}\r\n                                </CSelect>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={(e) => {props.setModal(!props.modal);handleSubmit(e)}}>\r\n                  Save changes\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {Link} from 'react-router-dom'\r\nimport Edit from './EditStudent'\r\nimport {\r\n  getStudentByAdvisor,\r\n} from \"../../actions/studentsActions\";\r\nimport styled from 'styled-components'\r\nconst LinkName = styled(Link)`\r\n  color: #8d0000 !important;\r\n`;\r\nconst MyStudent = () => {\r\n    const students = useSelector((state) => state.student.advisor);\r\n    const advisor = useSelector((state) => state.auth.user.userId);\r\n    const [modal, setModal] = useState(false)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getStudentByAdvisor(advisor));\r\n    }, [dispatch]);\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"userId\",\r\n          name: \"Student ID\",\r\n          sortable: true,\r\n        },\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,\r\n          cell: (row) => <LinkName to={`/student-profile/${row.id}`}>\r\n            {row.name + \" \" + row.surname}\r\n           </LinkName>\r\n           \r\n        },\r\n        {\r\n          selector: \"surname\",\r\n          name: \"Surname\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"createdAt\",\r\n          name: \"Registered\",\r\n          cell: row => (<span>{row?.createdAt?.replace('T', ' ').replace('.000Z', '')}</span>),\r\n          sortable: true,},\r\n      ];\r\n  return (\r\n      <>\r\n    <Edit modal={modal} setModal={setModal}/>\r\n    <DataTable\r\n            columns={columns}\r\n            data={students ? students : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyStudent\r\n"],"sourceRoot":""}