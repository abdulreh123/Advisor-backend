{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/multiselect-react-dropdown/dist/index.js","actions/paymentActions.js","views/profile/payments.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","_taggedTemplateLiteral","strings","raw","freeze","defineProperties","module","exports","require","getpaymentStudent","id","dispatch","axios","get","then","payment","type","GET_PAYMENT","payload","data","catch","error","returnErrors","response","message","status","Addpayment","uploads","fd","FormData","append","JSON","stringify","post","ADD_PAYMENT","MyPayments","props","studentId","payments","useSelector","state","useDispatch","useEffect","columns","selector","sortable","cell","row","onClick","image","newWindow","window","open","opener","openInNewTab","className","style","margin","ignoreRowClick","allowOverflow","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader","css","ref","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","Multiselect","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","React","createRef","searchBox","onChange","_this","bind","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","isVisible","Component","this","groupBy","singleSelect","groupByOptions","Promise","resolve","_this2","setState","initialSetValue","current","addEventListener","prevProps","prevSelectedvalues","focus","clearTimeout","removeEventListener","skipCheck","isObject","displayValue","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","key","create","event","onSearch","target","_this3","matchValues","search","caseSensitiveSearch","toLowerCase","e","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","emptyRecordMsg","loadingMessage","loading","keys","map","Fragment","obj","option","_this6","readOnly","checked","_this7","customCloseIcon","_this8","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","contains","_this9","placeholder","hidePlaceholder","disable","showArrow","onKeyDown","autoComplete","disabled","renderOptionList","defaultProps"],"mappings":"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","file":"static/js/7.7148daf0.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_PAYMENT,\r\n    ADD_PAYMENT,\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchPayment = () => dispatch => {\r\n    axios.get(`/api/payments`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_PAYMENT,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getpayment = (id) => dispatch => {\r\n    axios.get(`/api/payments/${id}`,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const getpaymentStudent = (id) => dispatch => {\r\n    axios.get(`/api/payments/student/${id}`,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: GET_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const Addpayment = (data,uploads) => (dispatch) => {\r\n    const fd = new FormData()\r\n    if(uploads && uploads.length > 0){\r\n        for (let i = 0; i < uploads.length; i++) {\r\n            fd.append(`files[${i}]`, uploads[i])\r\n        }\r\n    }\r\n    fd.append(\"document\", JSON.stringify(data));\r\n    axios.post(\"/api/payments/create\", fd,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n           dispatch(returnErrors(payment.data.message, payment.status));\r\n        })\r\n         .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n         })\r\n\r\n }\r\nexport const updatepayment = (data, id) => (dispatch) => {\r\n    axios.put(`/api/payments/${id}`, data,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n           dispatch(returnErrors(payment.data.message, payment.status));\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deletepayment = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/payments/${id}`,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React,{useEffect} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    getpaymentStudent\r\n} from \"../../actions/paymentActions\";\r\nconst MyPayments = (props) => {\r\n    const studentId = props.studentId\r\n    const payments = useSelector((state) => state.payments.payments);\r\n    const payment = useSelector((state) => state.payments.payment);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getpaymentStudent(studentId));\r\n    }, [dispatch,payment,studentId]);\r\n    const openInNewTab = (image) => {\r\n        const newWindow = window.open(`http://localhost:7000/static/assets/uploads/payments/${image}`, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) newWindow.opener = null\r\n    }\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"type\",\r\n          name: \"Type\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"year\",\r\n          name: \"Semester\",\r\n          sortable: true,\r\n        },\r\n        {\r\n          selector: \"amount\",\r\n          name: \"Amount\",\r\n          sortable: true,\r\n        },\r\n        {\r\n          selector: \"receipt\",\r\n          name: \"Receipt\",\r\n          sortable: true,\r\n          cell: row => (<span onClick={()=>openInNewTab(row.image)}>receipt</span>)\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n              style={{margin: '1rem'}}\r\n                // onClick={() => {\r\n                //   toggleEditModal(!editModal);\r\n                //   getDepartmentData(row.id);\r\n                // }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span >\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n  return (\r\n      <>\r\n    \r\n    <DataTable\r\n            columns={columns}\r\n            data={payments ? payments : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyPayments\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport { IMultiselectProps } from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: { options: never[]; disablePreSelectedValues: boolean; selectedValues: never[]; isObject: boolean; displayValue: string; showCheckbox: boolean; selectionLimit: number; placeholder: string; groupBy: string; style: {}; emptyRecordMsg: string; onSelect: () => void; onRemove: () => void; closeIcon: string; singleSelect: boolean; caseSensitiveSearch: boolean; id: string; closeOnSelect: boolean; avoidHighlightFirstOption: boolean; hidePlaceholder: boolean; showArrow: boolean; keepSearchTerm: boolean; };\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t} \n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n    \n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={`option${i}`}\n\t\t\t\t\t\t\tstyle={style['option']}\n              className={`\n               groupChildEle ${this.fadeOutSelection(option) && 'disableSelection'}\n                ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n              `}\n\t\t\t\t\t\t\tonClick={() => this.onSelectItem(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showCheckbox && !singleSelect && (\n                  <input\n                    type=\"checkbox\"\n                    className={'checkbox'}\n                    readOnly\n                    checked={this.isSelectedValue(option)}\n                  />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isObject ? option[displayValue] : (option || '').toString()}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`\n              ${highlightOption === i ? `highlightOption highlight` : \"\"} \n              ${this.fadeOutSelection(option) && 'disableSelection'} \n              ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n            `}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={this.isSelectedValue(option)}\n              />\n            )}\n            {isObject ? option[displayValue] : (option || '').toString()}\n          </li>\n    ));\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {!isObject ? (value || '').toString() : value[displayValue]}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.toggelOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, hidePlaceholder, disable, showArrow} = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`} \n          ref={this.searchWrapper} style={style['searchBox']} \n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className=\"searchBox\"\n            id={`${id || 'search'}_input`}\n            onChange={this.onChange}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && <img\n            src={DownArrow}\n            className={`icon_cancel icon_down_dir`}\n          />}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderMultiselectContainer();\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: ''\n};\n"],"sourceRoot":""}