{"version":3,"sources":["actions/errorActions.js","actions/authActions.js","containers/reactAlert.js","views/pages/login/Login.js"],"names":["returnErrors","msg","status","id","type","LOGOUT_SUCCESS","payload","GET_ERRORS","clearErrors","CLEAR_ERRORS","userLogin","data","dispatch","USER_LOADING","axios","post","then","user","LOGIN_SUCCESS","catch","error","response","message","LOGIN_FAIL","getCurrentUser","get","USER_LOADED","logOutUser","Snackbar","props","useDispatch","options","position","style","backgroundColor","border","color","borderRadius","fontFamily","fontSize","textAlign","closeStyle","useSnackbar","openSnackbar","useEffect","Login","useSelector","state","auth","errors","useState","setData","history","useHistory","handleChange","e","target","value","name","loadUser","a","handleSubmit","preventDefault","document","getElementById","reset","Cookies","push","className","marginBottom","src","height","md","placeholder","onChange","autoComplete","xs","onClick"],"mappings":"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","file":"static/js/20.33675e0f.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS,LOGOUT_SUCCESS,REQUEST_SUCCESS } from './types';\r\n\r\n//  Return Errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    if (status === 401) {\r\n        return {\r\n            type: LOGOUT_SUCCESS,\r\n            payload: { msg, status, id }\r\n        }\r\n    }\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id }\r\n    }\r\n}\r\n//  Clear Errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    }\r\n}\r\n\r\n// export const returnLoaded = () => {\r\n//     return {\r\n//         type: PAGE_LOADED\r\n//     }\r\n// }\r\n\r\n//  Return Success\r\nexport const returnSuccess = (msg, status, id = null) => {\r\n    return {\r\n        type: REQUEST_SUCCESS,\r\n        payload: { msg, status, id }\r\n    }\r\n}","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  LOGIN_FAIL,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport Cookies from 'js-cookie';;\r\n\r\nexport const userLogin = (data) => (dispatch) => { \r\n  dispatch({\r\n    type: USER_LOADING,\r\n  });\r\n  // make call to candidate authentication API\r\n  axios\r\n    .post(\"/api/auth/user\", data)\r\n    .then((user) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: user.data.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n      dispatch({ type: LOGIN_FAIL });\r\n    });\r\n};\r\n\r\n\r\nexport const getCurrentUser = () => (dispatch) => {\r\n  dispatch({\r\n    type: USER_LOADING,\r\n  });\r\n  // make call to candidate authentication API\r\n  axios\r\n    .get(\"/api/auth/access\")\r\n    .then((user) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: user.data.data,\r\n      });\r\n    })\r\n    .catch((error) => { \r\n      dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n      });\r\n     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n    });\r\n};\r\nexport const logOutUser = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT_SUCCESS,\r\n  });\r\n};\r\n\r\n//Setup config/headers and token\r\nexport const tokenConfig = () => {\r\n  // Get token from localstorage\r\n  const initCookie = Cookies.get(\"__SOSAR_AUTH\");\r\n  const token = initCookie?.token;\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // If token, add to headers\r\n  if (token) {\r\n    config.headers[\"sis-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport { useSnackbar } from 'react-simple-snackbar';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearErrors } from '../actions/errorActions'\r\n\r\nexport const Snackbar = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { type, message = \"Request successful!\" } = props\r\n    let status;\r\n    switch (type) {\r\n        case 200:\r\n            status = 'success';\r\n            break;\r\n        default:\r\n            status = 'danger';\r\n            break;\r\n    }\r\n\r\n\r\n    const options = {\r\n        position: 'bottom-right',\r\n        style: {\r\n            backgroundColor: `var(--${status})`,\r\n            border: '1px solid #ffffffd1',\r\n            color: 'var(--white)',\r\n            borderRadius: '.5rem',\r\n            fontFamily: 'roboto condense, monospace',\r\n            fontSize: '1rem',\r\n            textAlign: 'center',\r\n        },\r\n        closeStyle: {\r\n            color: '#92e792ad',\r\n            fontSize: '16px',\r\n        },\r\n    }\r\n    const [openSnackbar] = useSnackbar(options);\r\n    useEffect(() => {\r\n        if (type && message) {\r\n            openSnackbar(`${message}`, 5000)\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [type, message])\r\n    return (<></>)\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Snackbar} from '../../../containers/reactAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n  userLogin,\r\n} from \"../../../actions/authActions\";\r\nimport Cookies from 'js-cookie';\r\nconst checkLogin = () => {\r\n  return Cookies.get('__SOSAR_AUTH') ? true : false;\r\n}\r\n\r\nconst Login = () => {\r\n  const user = useSelector((state) => state.auth.user);\r\n  let { msg, status } = useSelector(state => state.errors);\r\n  const [data, setData] = useState({});\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    })\r\n  }\r\n  const redirect = () => {\r\n    history.push(`/dashboard`)\r\n  }\r\n  const loadUser = async () => {\r\n    dispatch(userLogin({ ...data }));\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    await loadUser()\r\n    e.preventDefault();\r\n    document.getElementById(\"resetLogin\").reset()\r\n  }\r\n  if (checkLogin() === true && user) {\r\n    history.push(`/dashboard`)\r\n  }\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <div style={{textAlign: \"center\",marginBottom:\"1rem\"}}>\r\n          <CIcon\r\n            className=\"c-sidebar-brand-minimized\"\r\n            name=\"sygnet\"\r\n            src=\"https://neu.edu.tr/wp-content/uploads/2018/11/01/neu-42-years-in-education.png\"\r\n            height={100}\r\n          /></div>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"6\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm id=\"resetLogin\">\r\n                    <p className=\"text-muted\">Sign In to your account</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" placeholder=\"Username\" name=\"username\" onChange={handleChange} />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-lock-locked\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" name=\"password\" onChange={handleChange} />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        <CButton color=\"primary\" className=\"px-4\" onClick={handleSubmit}>Login</CButton>\r\n                      </CCol>\r\n                      {/* <CCol xs=\"6\" className=\"text-right\">\r\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\r\n                      </CCol> */}\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n            <Snackbar type={status} message={msg} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}