{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","actions/chairmanActions.js","views/chairman/EditChairman.js","views/chairman/AllChairman.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","fetchChairman","dispatch","axios","get","then","api","type","GET_CHAIRMANS","payload","data","catch","error","returnErrors","response","message","status","getChairman","id","chairman","ADD_CHAIRMANS","AddChairman","post","updateChairman","put","deleteChairman","delete","Modals","props","useSelector","state","chairmans","useDispatch","useState","setData","handleChange","e","target","name","parseInt","show","modal","onClose","setModal","document","getElementById","reset","color","closeButton","action","method","encType","className","row","md","htmlFor","xs","onChange","defaultValue","userId","surname","onClick","create","preventDefault","styled","Link","AllChairman","useEffect","columns","selector","sortable","cell","Department","style","margin","cursor","ignoreRowClick","allowOverflow","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"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","file":"static/js/28.1e848065.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import {\r\n    GET_CHAIRMANS,\r\n    ADD_CHAIRMANS,\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { returnErrors } from \"./errorActions\";\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchChairman = () => dispatch => {\r\n    axios.get(`/api/chairman`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_CHAIRMANS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getChairman = (id) => dispatch => {\r\n    axios.get(`/api/chairman/${id}`,  )\r\n        .then(chairman => {\r\n            dispatch({\r\n                type: ADD_CHAIRMANS,\r\n                payload: chairman.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddChairman = (data) => (dispatch) => {\r\n    axios.post(\"/api/chairman/create\", data,  )\r\n        .then(chairman => {\r\n            dispatch({\r\n                type: ADD_CHAIRMANS,\r\n                payload: chairman.data.data\r\n            });\r\n            dispatch(returnErrors(chairman.data.message, chairman.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateChairman = (data, id) => (dispatch) => {\r\n    axios.put(`/api/chairman/${id}`, data,  )\r\n        .then(chairman => {\r\n            dispatch({\r\n                type: ADD_CHAIRMANS,\r\n                payload: chairman.data.data\r\n            });\r\n           dispatch(returnErrors(chairman.data.message, chairman.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteChairman = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/chairman/${id}`,  )\r\n        .then(chairman => {\r\n            dispatch({\r\n                type: ADD_CHAIRMANS,\r\n                payload: chairman.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React, { useState,useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n} from '@coreui/react'\r\nimport {\r\n    updateChairman\r\n  } from \"../../actions/chairmanActions\";\r\n\r\nconst Modals = (props) => {\r\n    const chairman = useSelector((state) => state.chairmans.chairman);\r\n    const dispatch = useDispatch()\r\n    const [data, setData] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if(name==='userId'){\r\n            setData({\r\n                ...data,\r\n                [name]: parseInt(value)\r\n            })\r\n        }\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleUser = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        const create = {\r\n            userId:data.userId,\r\n            name: data.name,\r\n            surname: data.surname,\r\n        }\r\n        e.preventDefault();\r\n        dispatch(updateChairman({ ...create },chairman.id));\r\n        document.getElementById(\"resetUpdateChairman\").reset()\r\n        props.setModal(!props.modal)\r\n    }\r\n  return (\r\n    <CRow>\r\n          <CCardBody>\r\n              <CModal \r\n              show={props.modal} \r\n              onClose={() => {props.setModal(!props.modal); document.getElementById(\"resetUpdateChairman\").reset()}}\r\n              color=\"primary\"\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Edit Student</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n                    <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetUpdateChairman\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">user Id</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"userId\" onChange={handleChange} defaultValue={chairman?.userId} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"name\" onChange={handleChange} defaultValue={chairman?.name} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Surname</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"surname\" onChange={handleChange} defaultValue={chairman?.surname}/>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        {/* <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"number-input\">Username</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"number-input\" type=\"text\" name=\"userName\" onChange={handleUser} />\r\n                            </CCol>\r\n                        </CFormGroup> */}\r\n                        {/* <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"email-input\">Email Input</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Enter Email\" autoComplete=\"email\"/>\r\n                    <CFormText className=\"help-block\">Please enter your email</CFormText>\r\n                  </CCol>\r\n                </CFormGroup> */}\r\n                        {/* <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"password-input\">Password</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput type=\"password\" id=\"password-input\" name=\"password\" onChange={handleUser} />\r\n                            </CCol>\r\n                        </CFormGroup> */}\r\n                    </CForm>\r\n                </CCardBody>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={handleSubmit}>\r\n                  Save changes\r\n                </CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() =>  props.setModal(!props.modal)}>\r\n                  Cancel\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCardBody>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n","import React,{useEffect,useState} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {Link} from 'react-router-dom'\r\nimport Edit from './EditChairman'\r\nimport {\r\n  fetchChairman,getChairman,deleteChairman\r\n} from \"../../actions/chairmanActions\";\r\nimport styled from 'styled-components'\r\nconst LinkName = styled(Link)`\r\n  color: #8d0000 !important;\r\n`;\r\nconst AllChairman = () => {\r\n    const chairmans = useSelector((state) => state.chairmans.chairmans);\r\n    const chairman = useSelector((state) => state.chairmans.chairman);\r\n    const [modal, setModal] = useState(false)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchChairman());\r\n    }, [dispatch,chairman]);\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,\r\n          cell: (row) => \r\n            <span>{row.name + \" \" + row.surname}</span>\r\n          },\r\n     \r\n        {\r\n          selector: \"Department\",\r\n          name: \"Department\",\r\n          cell: row => (<span>{row?.Department?.name}</span>),\r\n          sortable: true,},\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n              style={{margin: '1rem',cursor:\"pointer\"}}\r\n                onClick={() => {\r\n                  setModal(!modal);\r\n                  dispatch(getChairman(row.id));\r\n                }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span style={{cursor:\"pointer\"}} onClick={() => {\r\n                  dispatch(deleteChairman(row.id));\r\n                }}> \r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n  return (\r\n      <>\r\n    <Edit modal={modal} setModal={setModal}/>\r\n    <DataTable\r\n            columns={columns}\r\n            data={chairmans ? chairmans : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllChairman\r\n"],"sourceRoot":""}