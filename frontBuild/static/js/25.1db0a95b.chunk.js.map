{"version":3,"sources":["actions/coursesActions.js","views/courses/AllCourses.js"],"names":["fetchCourses","dispatch","axios","get","then","api","type","GET_COURSES","payload","data","AddCourse","post","course","ADD_COURSE","AllCourses","courses","useSelector","state","useDispatch","useEffect","columns","selector","name","sortable","cell","row","className","style","margin","ignoreRowClick","allowOverflow","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader"],"mappings":"6KAAA,iGAQaA,EAAe,kBAAM,SAAAC,GAC9BC,IAAMC,IAAN,eACKC,MAAK,SAAAC,GACFJ,EAAS,CACLK,KAAMC,IACNC,QAASH,EAAII,KAAKA,YAmBrBC,EAAY,SAACD,GAAD,OAAU,SAACR,GAChCC,IAAMS,KAAK,qBAAsBF,GAC5BL,MAAK,SAAAQ,GACFX,EAAS,CACLK,KAAMO,IACNL,QAASI,EAAOH,KAAKA,a,iCCrCrC,8DA8EeK,UAxEI,WACf,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAAQA,WAC/CH,EAASI,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAAQH,UAC9CX,EAAWiB,cACjBC,qBAAU,WACNlB,EAASD,iBACV,CAACC,EAASW,IAEb,IAAIQ,EAAU,CACV,CACEC,SAAU,OACVC,KAAM,OACNC,UAAU,GACZ,CACEF,SAAU,OACVC,KAAM,OACNC,UAAU,GAEZ,CACEF,SAAU,WACVC,KAAM,WACNC,UAAU,GAEZ,CACEF,SAAU,SACVC,KAAM,SACNC,UAAU,GAEZ,CACEF,SAAU,OACVC,KAAM,OACNC,UAAU,GAEZ,CACED,KAAM,UACNE,KAAM,SAACC,GAAD,OACJ,sBAAKC,UAAU,aAAf,UACE,sBACAC,MAAO,CAACC,OAAQ,QADhB,kBASA,8CAKJC,gBAAgB,EAChBC,eAAe,IAGvB,OACI,mCAEF,cAAC,IAAD,CACQV,QAASA,EACTX,KAAMM,GAAoB,GAC1BgB,SAAS,EACTC,YAAY,EACZC,YAAY,EACZC,kBAAkB,EAClBC,eAAe,SACfC,UAAU","file":"static/js/25.1db0a95b.chunk.js","sourcesContent":["import {\r\n    GET_COURSES,\r\n    ADD_COURSE\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchCourses = () => dispatch => {\r\n    axios.get(`/api/course`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_COURSES,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const getCourse = (id) => dispatch => {\r\n    axios.get(`/api/course/${id}`,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\nexport const AddCourse = (data) => (dispatch) => {\r\n    axios.post(\"/api/course/create\", data,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n           // dispatch(returnErrors(course.data.message, course.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n }\r\nexport const updateCourse = (data, id) => (dispatch) => {\r\n    axios.put(`/api/course/${id}`, data,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n           // dispatch(returnErrors(course.data.message, course.status));\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n}\r\nexport const deleteCourse = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/course/${id}`,  )\r\n        .then(course => {\r\n            dispatch({\r\n                type: ADD_COURSE,\r\n                payload: course.data.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n}\r\n","import React,{useEffect} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchCourses\r\n} from \"../../actions/coursesActions\";\r\nconst AllCourses = () => {\r\n    const courses = useSelector((state) => state.courses.courses);\r\n    const course = useSelector((state) => state.courses.course);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchCourses());\r\n    }, [dispatch,course]);\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"name\",\r\n          name: \"Name\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"code\",\r\n          name: \"Code\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"semester\",\r\n          name: \"Semester\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"credit\",\r\n          name: \"Credit\",\r\n          sortable: true\r\n        },\r\n        {\r\n          selector: \"ECT5\",\r\n          name: \"ECT5\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n              style={{margin: '1rem'}}\r\n                // onClick={() => {\r\n                //   toggleEditModal(!editModal);\r\n                //   getDepartmentData(row.id);\r\n                // }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span >\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n  return (\r\n      <>\r\n    \r\n    <DataTable\r\n            columns={columns}\r\n            data={courses ? courses : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllCourses\r\n"],"sourceRoot":""}