{"version":3,"sources":["actions/studentsActions.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/courses/MyCourses.js"],"names":["fetchStudents","dispatch","axios","get","then","api","type","GET_STUDENTS","payload","data","catch","error","returnErrors","response","message","status","getChairmanStat","id","GET_CHAIRMAN_STATS","getStudent","branch","GET_STUDENT","getTimeTable","GET_TIMETABLE","getStudentStats","departmentId","GET_STUDENT_STATS","getStudentByAdvisor","GET__ADVISOR_STUDENTS","getTranscript","GET_TRANSCRIPT","AddStudents","post","ADD_STUDENT","updateStudent","put","updateGrade","studentId","courseID","AddRemoveCourses","predictedCgpa","cgpas","GET_PREDICTED_CGPA","automate","year","GET_AUTO_COURSE","CoursesApproval","COURSES_TO_APPROVE","Approval","courseId","COURSE_APPROVED","deleteStudent","delete","groups","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","BranchWrapper","styled","div","Card","props","height","margin","color","background","padding","borderRadius","border","borderTop","textAlign","DataTable","Cell","CellHead","Category","Gpa","p","grades","StudentCourses","user","useSelector","state","auth","courses","student","studentCourse","useState","setData","count","setCount","filter","course","gpa","useDispatch","length","console","log","preCrp","studentscourses","grade","map","pre","store","CrPts","JSON","parse","credit","useEffect","userId","handleChange","e","value","target","newValue","calcultae","points","CalculateCrPoints","final","dat","displayPoints","displayCGpa","sum1","reduce","accumulator","object","credit1","totalcrPts","totalcredit","toPrecision","index","Fragment","academicYear","Course","code","to","name","row","xs","md","custom","onChange","dep","Number","parseFloat","cgpa"],"mappings":"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","file":"static/js/31.fffbce1f.chunk.js","sourcesContent":["import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_STUDENTS,\r\n    GET__ADVISOR_STUDENTS,\r\n    ADD_STUDENT,\r\n    GET_AUTO_COURSE,\r\n    GET_TRANSCRIPT,\r\n    GET_STUDENT,\r\n    COURSES_TO_APPROVE,\r\n    COURSE_APPROVED,\r\n    GET_STUDENT_STATS,\r\n    GET_TIMETABLE,\r\n    GET_CHAIRMAN_STATS,\r\n    GET_PREDICTED_CGPA\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchStudents = () => dispatch => {\r\n    axios.get(`/api/student`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_STUDENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getChairmanStat = (id) => dispatch => {\r\n    axios.get(`/api/chairman/statistics/${id}`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_CHAIRMAN_STATS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudent = (id) => dispatch => {\r\n    axios.get(`/api/student/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTimeTable = (id) => dispatch => {\r\n    axios.get(`/api/student/time-table/${id}?year=2021-2022 - Fall`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TIMETABLE,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentStats = (id,departmentId) => dispatch => {\r\n    axios.get(`/api/student/stats/${id}/${departmentId}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT_STATS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentByAdvisor = (id) => dispatch => {\r\n    axios.get(`/api/student/advisor/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET__ADVISOR_STUDENTS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTranscript = (id) => dispatch => {\r\n    axios.get(`/api/student/transcript/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TRANSCRIPT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddStudents = (data) => (dispatch) => {\r\n    axios.post(\"/api/student/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateStudent = (data, id) => (dispatch) => {\r\n    axios.put(`/api/student/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const updateGrade = (data, studentId,courseID) => (dispatch) => {\r\n    axios.put(`/api/student/${studentId}/${courseID}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const AddRemoveCourses = (id, data) => (dispatch) => {\r\n    axios.put(`/api/student/add/remove/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const predictedCgpa = (cgpas) => (dispatch) => {\r\n    axios.get(`http://app.neu.edu.tr:7003/predict/%7Bvalue%7D?name=[${cgpas}]`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_PREDICTED_CGPA,\r\n                payload: branch.data\r\n            });\r\n        })\r\n        // .catch(error => {\r\n        //     dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        // })\r\n\r\n}\r\nexport const automate = (id, year) => (dispatch) => {\r\n    axios.get(`/api/student/automate/${id}?year=${year}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_AUTO_COURSE,\r\n                payload: branch.data.data\r\n            });\r\n          // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const CoursesApproval = (id) => (dispatch) => {\r\n    axios.get(`/api/student/get-approve/${id}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSES_TO_APPROVE,\r\n                payload: branch.data.data\r\n            });\r\n         //  dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const Approval = (studentId,courseId) => (dispatch) => {\r\n    axios.put(`/api/student//approve/${studentId}/${courseId}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSE_APPROVED,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteStudent = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/student/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    getTranscript,\r\n} from \"../../actions/studentsActions\";\r\nimport styled from 'styled-components';\r\nimport {\r\n    CFormGroup,\r\n    CCol,\r\n    CSelect,\r\n} from '@coreui/react'\r\nconst BranchWrapper = styled.div`\r\n`;\r\nconst Card = styled.div`\r\n  display: flex;\r\n  height: ${(props) => props.height};\r\n  margin: ${(props) => props.margin};\r\n  flex-direction: column;\r\n  color: ${(props) => props.color || \"#4e4e51\"};\r\n  background: ${(props) => props.background || \"#fff\"};\r\n  padding: ${(props) => props.padding || \"10px 17px\"};\r\n  border-radius: ${(props) => props.borderRadius || \"8px\"};\r\n  border: ${(props) => props.border || \"1px solid #E6E9ED\"};\r\n  border-top: ${(props) => props.borderTop};\r\n  opacity: 1;\r\n  transition: all 0.2s ease;\r\n  text-align: ${(props) => props.textAlign};\r\n`;\r\nconst DataTable = styled(Card)`\r\n    display: grid;\r\n    grid-template-columns: 24% 40% 11% 10% 15%;\r\n    border: 0.5px solid #e3e4e8 !important;\r\n    margin: 1.5rem 2rem 2rem 2rem;\r\n    padding: 0 !important;\r\n`;\r\nconst Cell = styled.div`\r\n    border: 0.5px solid #E6E9ED;\r\n    height: 2.6rem;\r\n    text-align: center;\r\n    padding: 3px;\r\n`;\r\nconst CellHead = styled.div`\r\n    padding: 12px;\r\n    border: 0.5px solid #E6E9ED;\r\n    height: 3rem;\r\n    text-align: center;\r\n    font-weight: 550;\r\n`;\r\nconst Category = styled.div`\r\n    margin: 2rem 2rem 0 2rem;\r\n    border-bottom: 1px solid #e3e4e8;\r\n    font-size: 1.2rem;\r\n`;\r\nconst Gpa = styled.p`\r\ntext-align: center;\r\n`;\r\n\r\nconst grades = [\"AA\", \"BA\", \"BB\", \"CB\", \"CC\", \"DC\", \"DD\", \"FD\", \"FF\"]\r\nconst StudentCourses = () => {\r\n    const user = useSelector((state) => state.auth.user);\r\n    const courses = useSelector((state) => state.student.studentCourse);\r\n    const [data, setData] = useState([]);\r\n    const [count, setCount] = useState(true);\r\n    const filter = courses.filter(course => course.gpa === null)\r\n    const dispatch = useDispatch();\r\n    if (count && courses.length>0) {\r\n        console.log(count)\r\n        const preCrp = filter[0]?.courses?.filter(course => course.studentscourses.grade !== null)\r\n        console.log(preCrp)\r\n        preCrp?.map(pre => {\r\n            const store = {\r\n                id: pre.id,\r\n                grade: pre.studentscourses.grade,\r\n                CrPts: JSON.parse(pre.studentscourses.CrPts),\r\n                credit: 3\r\n            }\r\n            setData(arr => [...arr, store])\r\n        })\r\n        setCount(false)\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getTranscript(user?.userId));\r\n    }, [dispatch, user]);\r\n    const CalculateCrPoints = (grade, credit) => {\r\n        let points: number | undefined;\r\n        switch (grade) {\r\n            case \"AA\":\r\n                points = 4 * credit\r\n                break;\r\n            case \"BA\":\r\n                points = 3.5 * credit\r\n                break;\r\n            case \"BB\":\r\n                points = 3 * credit\r\n                break;\r\n            case \"CB\":\r\n                points = 2.5 * credit\r\n                break;\r\n            case \"CC\":\r\n                points = 2 * credit\r\n                break;\r\n            case \"DC\":\r\n                points = 1.5 * credit\r\n                break;\r\n            case \"DD\":\r\n                points = 1 * credit\r\n                break;\r\n            case \"FD\":\r\n                points = 0.5 * credit\r\n                break;\r\n            case \"FF\":\r\n                points = 0 * credit\r\n                break;\r\n        }\r\n        return points\r\n    }\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const newValue = JSON.parse(value);\r\n        const calcultae = CalculateCrPoints(newValue.grade, newValue.credit)\r\n        const store = {\r\n            id: newValue.id,\r\n            grade: newValue.grade,\r\n            CrPts: calcultae,\r\n            credit: newValue.credit\r\n        }\r\n        const final = data.filter(dat => dat.id !== newValue.id)\r\n        setData(final)\r\n        setData(arr => [...arr, store])\r\n    }\r\n    const displayPoints = (id) => {\r\n        const crd = data.filter(course => course.id === id)\r\n        return crd[0]?.CrPts\r\n    }\r\n    const displayGpa = () => {\r\n        const sum = data.reduce((accumulator, object) => {\r\n            return accumulator + object.CrPts;\r\n        }, 0);\r\n        const credit = data.reduce((accumulator, object) => {\r\n            return accumulator + object.credit;\r\n        }, 0);\r\n        return (sum / credit).toPrecision(3)\r\n    }\r\n    const displayCGpa = () => {\r\n        const sum1 = data.reduce((accumulator, object) => {\r\n            return accumulator + object.CrPts;\r\n        }, 0);\r\n        const filter = courses.filter(course => course.gpa !== null)\r\n        const credit1 = data.reduce((accumulator, object) => {\r\n            return accumulator + object.credit;\r\n        }, 0);\r\n        if (filter.length > 0) {\r\n            const sum = filter.reduce((accumulator, object) => {\r\n                return accumulator + object.totalcrPts;\r\n            }, 0);\r\n            const credit = filter.reduce((accumulator, object) => {\r\n                return accumulator + object.totalcredit;\r\n            }, 0);\r\n            return ((sum + sum1)/(credit1 + credit)).toPrecision(3)\r\n        }else{\r\n            return (sum1 / credit1).toPrecision(3)\r\n        }\r\n    }\r\n    return (\r\n        <BranchWrapper>\r\n            {courses?.map((course, index) =>\r\n                <div margin=\"2rem\" key={index} >\r\n\r\n                    <Category>\r\n                        Academic year {course.year}\r\n                    </Category>\r\n                    <DataTable>\r\n                        <CellHead>Code</CellHead>\r\n                        <CellHead>Name</CellHead>\r\n                        <CellHead>Credit</CellHead>\r\n                        <CellHead>grade</CellHead>\r\n                        <CellHead>CrPts</CellHead>\r\n                        {course?.courses?.map((log, index) =>\r\n                            <React.Fragment key={index} >\r\n                                {log.studentscourses.academicYear === course.year ?\r\n                                    <>\r\n                                        <Cell>{log.Course.code}</Cell>\r\n                                        <Cell><Link to={`/courseDashboard/${log?.id}`}>{log.Course.name}</Link></Cell>\r\n                                        <Cell>{log.Course.credit}</Cell>\r\n                                        <Cell>{log.studentscourses?.grade ? log.studentscourses?.grade :\r\n\r\n                                            <CFormGroup row>\r\n                                                <CCol xs=\"12\" md=\"20\">\r\n                                                    <CSelect custom name=\"grade\" id=\"select\" onChange={handleChange} >\r\n                                                        <option value=\"0\">Predict Grade</option>\r\n                                                        {grades.map(dep =>\r\n                                                            <option value={`{\"grade\":\"${dep}\",\"id\":${log?.id},\"credit\":${log.Course.credit}}`}>{dep}</option>\r\n                                                        )}\r\n                                                    </CSelect>\r\n                                                </CCol>\r\n                                            </CFormGroup>\r\n                                        }</Cell>\r\n                                        <Cell>{log.studentscourses?.CrPts ? log.studentscourses?.CrPts : displayPoints(log?.id)}</Cell> </> : null}\r\n\r\n                            </React.Fragment>\r\n\r\n                        )}\r\n                    </DataTable>\r\n                    <Gpa>GPA: {course.gpa ? Number.parseFloat(course.gpa).toPrecision(3) : displayGpa()} / CGPA: {course.cgpa?Number.parseFloat(course.cgpa).toPrecision(3):displayCGpa()}/ STATUS : {course.status} / TOTAL CREDIT: {course.totalcredit}</Gpa>\r\n\r\n                </div>\r\n            )}\r\n        </BranchWrapper>\r\n    )\r\n}\r\n\r\nexport default StudentCourses\r\n"],"sourceRoot":""}