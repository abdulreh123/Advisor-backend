{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","actions/studentsActions.js","actions/groupActions.js","../node_modules/multiselect-react-dropdown/dist/index.js","actions/paymentActions.js","views/profile/payments.js","views/profile/AddCourse.js","views/profile/AutoCourse.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","fetchStudents","dispatch","axios","get","then","api","type","GET_STUDENTS","payload","data","catch","error","returnErrors","response","message","status","getChairmanStat","id","GET_CHAIRMAN_STATS","getStudent","branch","GET_STUDENT","getTimeTable","GET_TIMETABLE","getStudentStats","departmentId","GET_STUDENT_STATS","getStudentByAdvisor","GET__ADVISOR_STUDENTS","getTranscript","GET_TRANSCRIPT","AddStudents","post","ADD_STUDENT","updateStudent","put","updateGrade","studentId","courseID","AddRemoveCourses","automate","year","GET_AUTO_COURSE","CoursesApproval","COURSES_TO_APPROVE","Approval","courseId","COURSE_APPROVED","fetchGroup","GET_GROUPS","getGroup","group","ADD_GROUP","checkClash","ids","getGroupDepartment","GET_DEPARTMENT_GROUP","AddGroup","module","exports","require","getpaymentStudent","payment","GET_PAYMENT","Addpayment","uploads","fd","FormData","length","i","append","JSON","stringify","ADD_PAYMENT","MyPayments","props","payments","useSelector","state","useDispatch","useEffect","columns","selector","name","sortable","cell","row","onClick","image","newWindow","window","open","opener","openInNewTab","className","style","margin","ignoreRowClick","allowOverflow","striped","responsive","pagination","highlightOnHover","subHeaderAlign","noHeader","MultiselectCosutm","styled","Multiselect","MultiSelectLabel","span","Modals","useState","setData","setyear","yearCourses","departmentGroups","filter","course","courseOptions","map","handleCourses","e","courses","undefined","show","modal","onClose","setModal","color","closeButton","action","method","encType","custom","onChange","target","options","displayValue","onSelect","onRemove","create","preventDefault","document","getElementById","reset","div","height","background","padding","borderRadius","border","borderTop","textAlign","student","autoCourse","size","selectableRows","css","ref","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","inputValue","filteredOptions","unfilteredOptions","selectedValues","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","n","searchWrapper","React","createRef","searchBox","_this","bind","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","isVisible","Component","this","groupBy","singleSelect","groupByOptions","Promise","resolve","_this2","setState","initialSetValue","current","addEventListener","prevProps","prevSelectedvalues","focus","clearTimeout","removeEventListener","skipCheck","isObject","optionList","findIndex","v","item","indexOf","reduce","r","a","key","push","event","onSearch","_this3","matchValues","search","caseSensitiveSearch","toLowerCase","toString","keyCode","disablePreSelectedValues","previousState","index","splice","_this4","closeOnSelect","selectionLimit","onSingleSelect","_this5","emptyRecordMsg","loadingMessage","loading","keys","Fragment","obj","option","_this6","readOnly","checked","_this7","customCloseIcon","_this8","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","contains","_this9","placeholder","hidePlaceholder","disable","showArrow","onKeyDown","autoComplete","disabled","renderOptionList","defaultProps"],"mappings":"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","file":"static/js/5.ea64d377.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_STUDENTS,\r\n    GET__ADVISOR_STUDENTS,\r\n    ADD_STUDENT,\r\n    GET_AUTO_COURSE,\r\n    GET_TRANSCRIPT,\r\n    GET_STUDENT,\r\n    COURSES_TO_APPROVE,\r\n    COURSE_APPROVED,\r\n    GET_STUDENT_STATS,\r\n    GET_TIMETABLE,\r\n    GET_CHAIRMAN_STATS,\r\n    GET_PREDICTED_CGPA\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchStudents = () => dispatch => {\r\n    axios.get(`/api/student`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_STUDENTS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getChairmanStat = (id) => dispatch => {\r\n    axios.get(`/api/chairman/statistics/${id}`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_CHAIRMAN_STATS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudent = (id) => dispatch => {\r\n    axios.get(`/api/student/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTimeTable = (id) => dispatch => {\r\n    axios.get(`/api/student/time-table/${id}?year=2021-2022 - Spring`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TIMETABLE,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentStats = (id,departmentId) => dispatch => {\r\n    axios.get(`/api/student/stats/${id}/${departmentId}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_STUDENT_STATS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getStudentByAdvisor = (id) => dispatch => {\r\n    axios.get(`/api/student/advisor/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET__ADVISOR_STUDENTS,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getTranscript = (id) => dispatch => {\r\n    axios.get(`/api/student/transcript/${id}`,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_TRANSCRIPT,\r\n                payload: branch.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const AddStudents = (data) => (dispatch) => {\r\n    axios.post(\"/api/student/create\", data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n }\r\nexport const updateStudent = (data, id) => (dispatch) => {\r\n    axios.put(`/api/student/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const updateGrade = (data, studentId,courseID) => (dispatch) => {\r\n    axios.put(`/api/student/${studentId}/${courseID}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const AddRemoveCourses = (id, data) => (dispatch) => {\r\n    axios.put(`/api/student/add/remove/${id}`, data,  )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const predictedCgpa = (cgpas) => (dispatch) => {\r\n    axios.get(`http://localhost:8000/predict/%7Bvalue%7D?name=[${cgpas}]`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_PREDICTED_CGPA,\r\n                payload: branch.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const automate = (id, year) => (dispatch) => {\r\n    axios.get(`/api/student/automate/${id}?year=${year}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: GET_AUTO_COURSE,\r\n                payload: branch.data.data\r\n            });\r\n          // dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const CoursesApproval = (id) => (dispatch) => {\r\n    axios.get(`/api/student/get-approve/${id}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSES_TO_APPROVE,\r\n                payload: branch.data.data\r\n            });\r\n         //  dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const Approval = (studentId,courseId) => (dispatch) => {\r\n    axios.put(`/api/student//approve/${studentId}/${courseId}`, )\r\n        .then(branch => {\r\n            dispatch({\r\n                type: COURSE_APPROVED,\r\n                payload: branch.data.data\r\n            });\r\n           dispatch(returnErrors(branch.data.message, branch.status));\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteStudent = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/student/${id}`,  )\r\n        .then(groups => {\r\n            dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: groups.data.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_GROUPS,\r\n    ADD_GROUP,\r\n    GET_DEPARTMENT_GROUP\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchGroup = () => dispatch => {\r\n    axios.get(`/api/group`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_GROUPS,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getGroup = (id) => dispatch => {\r\n    axios.get(`/api/group/${id}`,  )\r\n        .then(group => {\r\n            dispatch({\r\n                type: ADD_GROUP,\r\n                payload: group.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const checkClash = (ids) => dispatch => {\r\n    axios.get(`/api/group/clash/[${ids}]`,  )\r\n        .then(group => {\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const getGroupDepartment = (id) => dispatch => {\r\n    axios.get(`/api/group/department/${id}` )\r\n        .then(group => {\r\n            dispatch({\r\n                type: GET_DEPARTMENT_GROUP,\r\n                payload: group.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const AddGroup = (data) => (dispatch) => {\r\n    axios.post(\"/api/group/create\", data,  )\r\n        .then(group => {\r\n            dispatch({\r\n                type: ADD_GROUP,\r\n                payload: group.data.data\r\n            });\r\n           dispatch(returnErrors(group.data.message, group.status));\r\n        })\r\n         .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n         })\r\n\r\n }\r\nexport const updateGroup = (data, id) => (dispatch) => {\r\n    axios.put(`/api/group/${id}`, data,  )\r\n        .then(group => {\r\n            dispatch({\r\n                type: ADD_GROUP,\r\n                payload: group.data.data\r\n            });\r\n           dispatch(returnErrors(group.data.message, group.status));\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deleteGroup = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/group/${id}`,  )\r\n        .then(group => {\r\n            dispatch({\r\n                type: ADD_GROUP,\r\n                payload: group.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","import { returnErrors } from \"./errorActions\";\r\nimport {\r\n    GET_PAYMENT,\r\n    ADD_PAYMENT,\r\n} from './types';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\n\r\n\r\nexport const fetchPayment = () => dispatch => {\r\n    axios.get(`/api/payments`,  )\r\n        .then(api => {\r\n            dispatch({\r\n                type: GET_PAYMENT,\r\n                payload: api.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\nexport const getpayment = (id) => dispatch => {\r\n    axios.get(`/api/payments/${id}`,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const getpaymentStudent = (id) => dispatch => {\r\n    axios.get(`/api/payments/student/${id}`,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: GET_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n       })\r\n}\r\nexport const Addpayment = (data,uploads) => (dispatch) => {\r\n    const fd = new FormData()\r\n    if(uploads && uploads.length > 0){\r\n        for (let i = 0; i < uploads.length; i++) {\r\n            fd.append(`files[${i}]`, uploads[i])\r\n        }\r\n    }\r\n    fd.append(\"document\", JSON.stringify(data));\r\n    axios.post(\"/api/payments/create\", fd,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n           dispatch(returnErrors(payment.data.message, payment.status));\r\n        })\r\n         .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n         })\r\n\r\n }\r\nexport const updatepayment = (data, id) => (dispatch) => {\r\n    axios.put(`/api/payments/${id}`, data,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n           dispatch(returnErrors(payment.data.message, payment.status));\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n\r\n}\r\nexport const deletepayment = (id) => (dispatch) => {\r\n\r\n    axios.delete(`/api/payments/${id}`,  )\r\n        .then(payment => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: payment.data.data\r\n            });\r\n        })\r\n       .catch(error => {\r\n        dispatch(returnErrors(error.response.data.message, error.response.status));\r\n        })\r\n}\r\n","import React,{useEffect} from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    getpaymentStudent\r\n} from \"../../actions/paymentActions\";\r\nconst MyPayments = (props) => {\r\n    const studentId = props.studentId\r\n    const payments = useSelector((state) => state.payments.payments);\r\n    const payment = useSelector((state) => state.payments.payment);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      if(studentId){\r\n        dispatch(getpaymentStudent(studentId));\r\n      }\r\n    }, [dispatch,payment,studentId]);\r\n    const openInNewTab = (image) => {\r\n        const newWindow = window.open(`http://localhost:7000/static/assets/uploads/payments/${image}`, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) newWindow.opener = null\r\n    }\r\n\r\n    let columns = [\r\n        {\r\n          selector: \"type\",\r\n          name: \"Type\",\r\n          sortable: true,},\r\n        {\r\n          selector: \"year\",\r\n          name: \"Semester\",\r\n          sortable: true,\r\n        },\r\n        {\r\n          selector: \"amount\",\r\n          name: \"Amount\",\r\n          sortable: true,\r\n        },\r\n        {\r\n          selector: \"receipt\",\r\n          name: \"Receipt\",\r\n          sortable: true,\r\n          cell: row => (<span onClick={()=>openInNewTab(row.image)}>receipt</span>)\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          cell: (row) => (\r\n            <div className=\"table-icon\">\r\n              <span\r\n              style={{margin: '1rem'}}\r\n                // onClick={() => {\r\n                //   toggleEditModal(!editModal);\r\n                //   getDepartmentData(row.id);\r\n                // }}\r\n              >\r\n                  Edit\r\n              </span>\r\n              <span >\r\n                  Delete\r\n              </span>\r\n            </div>\r\n          ),\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n        },\r\n      ];\r\n  return (\r\n      <>\r\n    \r\n    <DataTable\r\n            columns={columns}\r\n            data={payments ? payments : []}\r\n            striped={true}\r\n            responsive={true}\r\n            pagination={true}\r\n            highlightOnHover={true}\r\n            subHeaderAlign=\"center\"\r\n            noHeader={true}\r\n          />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyPayments\r\n","import React, { useState,useEffect } from 'react'\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    CButton,\r\n    CCardBody,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CFormGroup,\r\n    CRow,\r\n    CCol,\r\n    CSelect,\r\n    CForm,\r\n} from '@coreui/react'\r\nimport styled from 'styled-components'\r\nimport {\r\n   AddRemoveCourses\r\n} from \"../../actions/studentsActions\";\r\nimport {\r\n   checkClash\r\n} from \"../../actions/groupActions\";\r\nconst MultiselectCosutm = styled(Multiselect)`\r\n  margin-bottom: 4px;\r\n`;\r\nconst MultiSelectLabel = styled.span`\r\n  font-size: 0.8rem;\r\n  color: var(--secondary-text-color);\r\n`;\r\nconst Modals = (props) => {\r\n    const studentId = props.studentId\r\n    const [data, setData] = useState({});\r\n    const [year, setyear] = useState('');\r\n    const dispatch= useDispatch()\r\n    const courses = useSelector((state) => state.group.departmentGroups);\r\n    const yearCourses = courses.filter(course=>course.year===year)\r\n    let courseOptions = yearCourses?.map((course) => ({\r\n        id: course.id,\r\n        name: course.name,\r\n    }));\r\n    const handleCourses = (e) => {\r\n        setData({\r\n            ...data,\r\n            courses: e,\r\n        });\r\n    };\r\n    const handleChange=(e)=>{\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setyear(value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        const courses = data?.courses.map(course=>course.id)\r\n        const create = {\r\n            type:'add',\r\n            year: year,\r\n            courses:courses\r\n\r\n        }\r\n        e.preventDefault();\r\n        dispatch(AddRemoveCourses(studentId,{ ...create }));\r\n        props.setModal(!props.modal)\r\n        document.getElementById(\"resetAdd\").reset()\r\n    }\r\n    useEffect(() => {\r\n        const courses = data?.courses?.map(course=>course.id)\r\n        if(courses!==undefined){\r\n            dispatch(checkClash(courses));\r\n        }\r\n    }, [dispatch, data]);\r\n    return (\r\n        <CRow>\r\n            <CCardBody>\r\n                <CModal\r\n                    show={props.modal}\r\n                    onClose={() => props.setModal(!props.modal)}\r\n                    color=\"primary\"\r\n                >\r\n                    <CModalHeader closeButton>\r\n                        <CModalTitle>Add courses</CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody>\r\n                        <CCardBody>\r\n                            <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetAdd\">\r\n                                <CFormGroup row>\r\n                                    <MultiSelectLabel>Acadamic Year :</MultiSelectLabel>\r\n                                        <CSelect custom name=\"select\" id=\"select\" onChange={handleChange}>\r\n                                            <option value=\"0\">Please select</option>\r\n                                            <option value=\"2021-2022 - Fall\">2021-2022 - Fall</option>\r\n                                            <option value=\"2021-2022 - Spring\">2021-2022 - Spring</option>\r\n                                            <option value=\"2021-2022 - Summer\">2021-2022 - Summer</option>\r\n                                        </CSelect>\r\n                                    <MultiSelectLabel>Courses :</MultiSelectLabel>\r\n                                    <MultiselectCosutm\r\n                                        id=\"watchers\"\r\n                                        options={courseOptions}\r\n                                        displayValue=\"name\"\r\n                                        onSelect={handleCourses}\r\n                                        onRemove={handleCourses}\r\n                                    />\r\n                                </CFormGroup>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                    </CModalBody>\r\n                    <CModalFooter>\r\n                        <CButton color=\"primary\" onClick={handleSubmit}>\r\n                            Add\r\n                        </CButton>{' '}\r\n                        <CButton color=\"secondary\" onClick={() => props.setModal(!props.modal)}>\r\n                            Cancel\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCardBody>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default Modals\r\n","import React, { useState } from 'react'\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    CButton,\r\n    CCardBody,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CFormGroup,\r\n    CRow,\r\n    CSelect,\r\n    CForm,\r\n} from '@coreui/react'\r\nimport styled from 'styled-components'\r\nimport {\r\n    automate\r\n} from \"../../actions/studentsActions\";\r\nconst MultiSelectLabel = styled.span`\r\n  font-size: 0.8rem;\r\n  color: var(--secondary-text-color);\r\n`;\r\nconst Card = styled.div`\r\ndisplay: flex;\r\nheight: ${(props) => props.height};\r\nmargin: ${(props) => props.margin};\r\nflex-direction: column;\r\ncolor: ${(props) => props.color || \"#4e4e51\"};\r\nbackground: ${(props) => props.background || \"#fff\"};\r\npadding: ${(props) => props.padding || \"10px 17px\"};\r\nborder-radius: ${(props) => props.borderRadius || \"8px\"};\r\nborder: ${(props) => props.border || \"1px solid #E6E9ED\"};\r\nborder-top: ${(props) => props.borderTop};\r\nopacity: 1;\r\ntransition: all 0.2s ease;\r\ntext-align: ${(props) => props.textAlign};\r\n`;\r\n\r\n// const DataTable = styled(Card)`\r\n//     display: grid;\r\n//     grid-template-columns: 33% 46% 20% ;\r\n//     border: 0.5px solid #e3e4e8 !important;\r\n//     margin: 1.5rem 2rem 2rem 2rem;\r\n//     padding: 0 !important;\r\n// `;\r\nconst Cell = styled.div`\r\n    border: 0.5px solid #E6E9ED;\r\n    height: 2rem;\r\n    text-align: center;\r\n    padding: 3px;\r\n`;\r\nconst CellHead = styled.div`\r\n    padding: 12px;\r\n    border: 0.5px solid #E6E9ED;\r\n    height: 3rem;\r\n    text-align: center;\r\n    font-weight: 550;\r\n`;\r\nconst Modals = (props) => {\r\n    const studentId = props.studentId\r\n    const dispatch = useDispatch()\r\n    const courses = useSelector((state) => state.student.autoCourse);\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        dispatch(automate(studentId, value));\r\n    }\r\n    let columns = [\r\n        {\r\n            selector: \"name\",\r\n            name: \"name\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            selector: \"code\",\r\n            name: \"Code\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            selector: \"credit\",\r\n            name: \"Credit\",\r\n            sortable: true,\r\n        },\r\n    ];\r\n    return (\r\n        <CRow>\r\n            <CCardBody>\r\n                <CModal\r\n                    show={props.modal}\r\n                    onClose={() => props.setModal(!props.modal)}\r\n                    color=\"primary\"\r\n                    size=\"lg\"\r\n                >\r\n                    <CModalHeader closeButton>\r\n                        <CModalTitle>Next courses</CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody>\r\n                        <CCardBody>\r\n                            <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\" id=\"resetAdd\">\r\n                                <CFormGroup row>\r\n                                    <MultiSelectLabel>Acadamic Year :</MultiSelectLabel>\r\n                                    <CSelect custom name=\"select\" id=\"select\" onChange={handleChange}>\r\n                                        <option value=\"0\">Please select</option>\r\n                                        <option value=\"2021-2022 - Fall\">2021-2022 - Fall</option>\r\n                                        <option value=\"2021-2022 - Spring\">2021-2022 - Spring</option>\r\n                                        <option value=\"2021-2022 - Summer\">2021-2022 - Summer</option>\r\n                                        <option value=\"2022-2023 - Fall\">2022-2023 - Fall</option>\r\n                                    </CSelect>\r\n                                </CFormGroup>\r\n                            </CForm>\r\n                            {courses.length > 0 ?\r\n\r\n                                <DataTable\r\n                                    columns={columns}\r\n                                    data={courses ? courses : []}\r\n                                    striped={true}\r\n                                    responsive={true}\r\n                                    pagination={true}\r\n                                    highlightOnHover={true}\r\n                                    subHeaderAlign=\"center\"\r\n                                    selectableRows\r\n                                    noHeader={true}\r\n                                /> : \"no courses offers\"}\r\n                        </CCardBody>\r\n                    </CModalBody>\r\n                    <CModalFooter>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </CCardBody>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default Modals\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport { IMultiselectProps } from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: { options: never[]; disablePreSelectedValues: boolean; selectedValues: never[]; isObject: boolean; displayValue: string; showCheckbox: boolean; selectionLimit: number; placeholder: string; groupBy: string; style: {}; emptyRecordMsg: string; onSelect: () => void; onRemove: () => void; closeIcon: string; singleSelect: boolean; caseSensitiveSearch: boolean; id: string; closeOnSelect: boolean; avoidHighlightFirstOption: boolean; hidePlaceholder: boolean; showArrow: boolean; keepSearchTerm: boolean; };\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t} \n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n    \n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={`option${i}`}\n\t\t\t\t\t\t\tstyle={style['option']}\n              className={`\n               groupChildEle ${this.fadeOutSelection(option) && 'disableSelection'}\n                ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n              `}\n\t\t\t\t\t\t\tonClick={() => this.onSelectItem(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showCheckbox && !singleSelect && (\n                  <input\n                    type=\"checkbox\"\n                    className={'checkbox'}\n                    readOnly\n                    checked={this.isSelectedValue(option)}\n                  />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isObject ? option[displayValue] : (option || '').toString()}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`\n              ${highlightOption === i ? `highlightOption highlight` : \"\"} \n              ${this.fadeOutSelection(option) && 'disableSelection'} \n              ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n            `}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={this.isSelectedValue(option)}\n              />\n            )}\n            {isObject ? option[displayValue] : (option || '').toString()}\n          </li>\n    ));\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {!isObject ? (value || '').toString() : value[displayValue]}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.toggelOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, hidePlaceholder, disable, showArrow} = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`} \n          ref={this.searchWrapper} style={style['searchBox']} \n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className=\"searchBox\"\n            id={`${id || 'search'}_input`}\n            onChange={this.onChange}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && <img\n            src={DownArrow}\n            className={`icon_cancel icon_down_dir`}\n          />}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderMultiselectContainer();\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: ''\n};\n"],"sourceRoot":""}